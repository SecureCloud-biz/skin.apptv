<?xml version="1.0" encoding="utf-8"?>
<includes>
	<!--
	CUSTOM WINDOWS LIST
		_Overlay 1150
		_3DDialogSelect 1151
		_HomeCustomise 1152
		_HomeMenuItems 1153
		_DialogSelect 1154
		_AddonsList 1155
		_DummyDialog 1157
	-->
	<!-- Expressions section -->
	<expression name="isFullscreenVideo">Window.IsActive(fullscreenvideo)</expression>
	<expression name="isnotFullscreenVideo">!Window.IsActive(fullscreenvideo)</expression>
	<expression name="isVideoAddon">String.Contains(Container.FolderPath,plugin://plugin.video)</expression>
	<expression name="isMovie">String.IsEqual(ListItem.DBTYPE,movie)</expression>
	<expression name="isVideo">String.IsEqual(ListItem.DBTYPE,video)</expression>
	<expression name="isTvshow">String.IsEqual(ListItem.DBTYPE,tvshow)</expression>
	<expression name="isSeason">String.IsEqual(ListItem.DBTYPE,season)</expression>
	<expression name="isSet">String.IsEqual(ListItem.DBTYPE,set)</expression>
	<expression name="isEpisode">String.IsEqual(ListItem.DBTYPE,episode)</expression>
	<expression name="isMusicvideo">String.IsEqual(ListItem.DBTYPE,musicvideo)</expression>
	<expression name="isArtist">String.IsEqual(ListItem.DBTYPE,artist)</expression>
	<expression name="isnotArtist">!String.IsEqual(ListItem.DBTYPE,artist)</expression>
	<expression name="isAlbum">String.IsEqual(ListItem.DBTYPE,album)</expression>
	<expression name="isSong">String.IsEqual(ListItem.DBTYPE,song)</expression>
	<expression name="isEmptyIcon">String.IsEmpty(ListItem.Icon)</expression>
	<expression name="isnotEmptyIcon">!String.IsEmpty(ListItem.Icon)</expression>
	<expression name="isEmptyPVRIcon">String.IsEmpty(ListItem.Icon) + IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))</expression>
	<expression name="isnotEmptyPVRIcon">!String.IsEmpty(ListItem.Icon) | !IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))</expression>
	<expression name="isEmptyDBID">String.IsEmpty(ListItem.DBID)</expression>
	<expression name="isnotEmptyDBID">!String.IsEmpty(ListItem.DBID)</expression>
	<expression name="isDefaultIcon">String.StartsWith(ListItem.Icon,Default)</expression>
	<expression name="isnotDefaultIcon">!String.StartsWith(ListItem.Icon,Default)</expression>
	<expression name="isInfoDialog">[Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]</expression>
	<expression name="isEnabledTouch">Skin.HasSetting(touch-controls)</expression>
	<expression name="isEnabledParentDirectory">System.GetBool(filelists.showparentdiritems)</expression>
	<expression name="isnotEnabledParentDirectory">!System.GetBool(filelists.showparentdiritems)</expression>
	<expression name="isEnabledScrollbar">!String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])</expression>
	<!-- Skin Variable section -->
	<variable name="BackgndImage">
		<value condition="Window.IsActive(weather) + Skin.HasSetting(background-customweather.multi) + !String.IsEmpty(Skin.String(background-customweather.name))">$INFO[Skin.String(background-customweather.path)]$INFO[Window(weather).Property(Day0.FanartCode)]</value>
		<value condition="Window.IsActive(weather) + !Skin.HasSetting(background-customweather.multi) + String.IsEmpty(Window(weather).Property(Current.FanartCode)) + !String.IsEmpty(Skin.String(background-customweather.name))">$INFO[Skin.String(background-customweather.path)]$INFO[Window(weather).Property(Day0.FanartCode)]</value>
		<value condition="Window.IsActive(weather) + !Skin.HasSetting(background-customweather.multi) + !String.IsEmpty(Skin.String(background-customweather.name))">$INFO[Skin.String(background-customweather.path)]$INFO[Window(weather).Property(Day0.FanartCode)]$INFO[Skin.String(background-customweather.ext)]</value>
		<value condition="Skin.HasSetting(background-slideshow) + Player.HasAudio + !String.IsEmpty(Window(visualisation).Property(ArtistSlideshow))">$INFO[Window(visualisation).Property(ArtistSlideshow)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + Player.HasAudio + !String.IsEmpty(MusicPlayer.Property(Fanart_Image))">$INFO[MusicPlayer.Property(Fanart_Image)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedfanart))">$INFO[ListItem.Art(animatedfanart)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + Player.HasAudio + String.IsEmpty(Window(videos).Property(PlayingBackgroundMedia))">$INFO[Window(home).Property(SkinHelper.Player.Music.ExtraFanArt)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(home).Property(SkinHelper.Music.ExtraFanArt))">$INFO[Window(home).Property(SkinHelper.Music.ExtraFanArt)]</value>
		<value condition="Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(home).Property(SkinHelper.ExtraFanArtPath))">$INFO[Window(home).Property(SkinHelper.ExtraFanArtPath)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(Window(home).Property(SkinHelper.Music.FanArt))">$INFO[Window(home).Property(SkinHelper.Music.FanArt)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(ListItem.Art(set.fanart))">$INFO[ListItem.Art(set.fanart)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value condition="!Skin.HasSetting(background-fanarts) + !String.IsEmpty(Fanart.Image)">$INFO[Fanart.Image]</value>
		<value condition="!String.IsEmpty(Skin.String(background-custom))">$INFO[Skin.String(background-custom)]</value>
		<value>background.png</value>
	</variable>
	<variable name="BackgndImageVisibity">
		<value condition="!Skin.HasSetting(background-visibiltymed) + !Skin.HasSetting(background-visibiltyhigh)">LowBgnVisibity</value>
		<value condition="Skin.HasSetting(background-visibiltymed)">MedBgnVisibity</value>
		<value condition="Skin.HasSetting(background-visibiltyhigh)">HighBgnVisibity</value>
	</variable>
	<variable name="VideoRating">
		<value condition="String.Contains(ListItem.Mpaa,Rated G) | String.Contains(ListItem.Mpaa,Rated: G)">special://skin/extras/images/rating/mpaa_general.png</value>
		<value condition="[String.Contains(ListItem.Mpaa,Rated PG) | String.Contains(ListItem.Mpaa,Rated: PG)] + !String.Contains(ListItem.Mpaa,Rated PG-13) + !String.Contains(ListItem.Mpaa,Rated: PG-13)">special://skin/extras/images/rating/mpaa_pg.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated PG-13) | String.Contains(ListItem.Mpaa,Rated: PG-13)">special://skin/extras/images/rating/mpaa_pg13.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated R) | String.Contains(ListItem.Mpaa,Rated: R)">special://skin/extras/images/rating/mpaa_restricted.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated NC-17) | String.Contains(ListItem.Mpaa,Rated: NC-17)">special://skin/extras/images/rating/mpaa_nc17.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:U)">special://skin/extras/images/rating/bbfc_u.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:UC)">special://skin/extras/images/rating/bbfc_uc.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:PG)">special://skin/extras/images/rating/bbfc_pg.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:12)">special://skin/extras/images/rating/bbfc_12.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:12A)">special://skin/extras/images/rating/bbfc_12A.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:15)">special://skin/extras/images/rating/bbfc_15.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:18)">special://skin/extras/images/rating/bbfc_18.png</value>
		<value condition="String.IsEqual(ListItem.Mpaa,UK:R18)">special://skin/extras/images/rating/bbfc_R18.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK0) | String.Contains(ListItem.Mpaa,FSK 0) | String.Contains(ListItem.Mpaa,FSK o.A.)">special://skin/extras/images/rating/FSK-0.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK6) | String.Contains(ListItem.Mpaa,FSK 6)">special://skin/extras/images/rating/FSK-6.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK12) | String.Contains(ListItem.Mpaa,FSK 12)">special://skin/extras/images/rating/FSK-12.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK16) | String.Contains(ListItem.Mpaa,FSK 16)">special://skin/extras/images/rating/FSK-16.png</value>
		<value condition="String.Contains(ListItem.Mpaa,FSK18) | String.Contains(ListItem.Mpaa,FSK 18)">special://skin/extras/images/rating/FSK-18.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:G) | String.IsEqual(Listitem.Mpaa,Australia:TV-G) | String.IsEqual(Listitem.Mpaa,Australia:TV-C) | String.IsEqual(Listitem.Mpaa,Australia:TV-P)">special://skin/extras/images/rating/australia_g.png</value>
		<value condition="String.Contains(Listitem.Mpaa,Australia:MA) | String.Contains(Listitem.Mpaa,Australia:TV-MA) | String.Contains(Listitem.Mpaa,Australia:TV-MAV) | String.Contains(Listitem.Mpaa,Australia:TV-AV)">special://skin/extras/images/rating/australia_ma.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:M) | String.IsEqual(Listitem.Mpaa,Australia:TV-M)">special://skin/extras/images/rating/australia_m.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:PG) | String.IsEqual(Listitem.Mpaa,Australia:TV-PG)">special://skin/extras/images/rating/australia_pg.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:R) | String.IsEqual(Listitem.Mpaa,Australia:TV-R)">special://skin/extras/images/rating/australia_r.png</value>
		<value condition="String.IsEqual(Listitem.Mpaa,Australia:X)">special://skin/extras/images/rating/australia_x.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:Livre) | String.Contains(ListItem.Mpaa,Livre)">special://skin/extras/images/Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:10) | String.Contains(ListItem.Mpaa,10 anos)">special://skin/extras/images/Brazil_10.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:12) | String.Contains(ListItem.Mpaa,12 anos)">special://skin/extras/images/Brazil_12.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:14) | String.Contains(ListItem.Mpaa,14 anos)">special://skin/extras/images/Brazil_14.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:16) | String.Contains(ListItem.Mpaa,16 anos)">special://skin/extras/images/Brazil_16.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Brazil:18) | String.Contains(ListItem.Mpaa,18 anos)">special://skin/extras/images/Brazil_18.png</value>
		<value condition="String.Contains(ListItem.Mpaa,HU-KN)">special://skin/extras/images/rating/HU_KN.png</value>
		<value condition="String.Contains(ListItem.Mpaa,HU-12)">special://skin/extras/images/rating/HU_12.png</value>
		<value condition="String.Contains(ListItem.Mpaa,HU-16)">special://skin/extras/images/rating/HU_16.png</value>
		<value condition="String.Contains(ListItem.Mpaa,HU-18)">special://skin/extras/images/rating/HU_18.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-Y) + ![String.Contains(ListItem.Mpaa,TV-Y7) | String.Contains(ListItem.Mpaa,TV-Y7-FV)]">special://skin/extras/images/rating/TV-Y.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-Y7) | String.Contains(ListItem.Mpaa,TV-Y7-FV)">special://skin/extras/images/rating/TV-Y7.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-G)">special://skin/extras/images/rating/TV-G.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-PG)">special://skin/extras/images/rating/TV-PG.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-14)">special://skin/extras/images/rating/TV-14.png</value>
		<value condition="String.Contains(ListItem.Mpaa,TV-MA)">special://skin/extras/images/rating/TV-MA.png</value>
	</variable>
	<variable name="GlobalSearchRating">
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Rated G) | String.Contains(Container(100).ListItem.Property(Mpaa),Rated: G)">special://skin/extras/images/rating/mpaa_general.png</value>
		<value condition="[String.Contains(Container(100).ListItem.Property(Mpaa),Rated PG) | String.Contains(Container(100).ListItem.Property(Mpaa),Rated: PG)] + !String.Contains(Container(100).ListItem.Property(Mpaa),Rated PG-13) + !String.Contains(Container(100).ListItem.Property(Mpaa),Rated: PG-13)">special://skin/extras/images/rating/mpaa_pg.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Rated PG-13) | String.Contains(Container(100).ListItem.Property(Mpaa),Rated: PG-13)">special://skin/extras/images/rating/mpaa_pg13.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Rated R) | String.Contains(Container(100).ListItem.Property(Mpaa),Rated: R)">special://skin/extras/images/rating/mpaa_restricted.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Rated NC-17) | String.Contains(Container(100).ListItem.Property(Mpaa),Rated: NC-17)">special://skin/extras/images/rating/mpaa_nc17.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),UK:U)">special://skin/extras/images/rating/bbfc_u.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),UK:UC)">special://skin/extras/images/rating/bbfc_uc.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),UK:PG)">special://skin/extras/images/rating/bbfc_pg.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),UK:12)">special://skin/extras/images/rating/bbfc_12.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),UK:12A)">special://skin/extras/images/rating/bbfc_12.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),UK:15)">special://skin/extras/images/rating/bbfc_15.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),UK:18)">special://skin/extras/images/rating/bbfc_18.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),UK:R18)">special://skin/extras/images/rating/bbfc_R18.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),FSK0) | String.Contains(Container(100).ListItem.Property(Mpaa),FSK 0) | String.Contains(ListItem.Mpaa,FSK o.A.)">special://skin/extras/images/rating/FSK-0.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),FSK6) | String.Contains(Container(100).ListItem.Property(Mpaa),FSK 6)">special://skin/extras/images/rating/FSK-6.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),FSK12) | String.Contains(Container(100).ListItem.Property(Mpaa),FSK 12)">special://skin/extras/images/rating/FSK-12.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),FSK16) | String.Contains(Container(100).ListItem.Property(Mpaa),FSK 16)">special://skin/extras/images/rating/FSK-16.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),FSK18) | String.Contains(Container(100).ListItem.Property(Mpaa),FSK 18)">special://skin/extras/images/rating/FSK-18.png</value>
		<value condition="String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:G) | String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:TV-G) | String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:TV-C) | String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:TV-P)">special://skin/extras/images/rating/australia_g.png</value>
		<value condition="String.Contains(Container(100).Listitem.Property(Mpaa),Australia:MA) | String.Contains(Container(100).Listitem.Property(Mpaa),Australia:TV-MA) | String.Contains(Container(100).Listitem.Property(Mpaa),Australia:TV-MAV) | String.Contains(Container(100).Listitem.Property(Mpaa),Australia:TV-AV)">special://skin/extras/images/rating/australia_ma.png</value>
		<value condition="String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:M) | String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:TV-M)">special://skin/extras/images/rating/australia_m.png</value>
		<value condition="String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:PG) | String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:TV-PG)">special://skin/extras/images/rating/australia_pg.png</value>
		<value condition="String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:R) | String.IsEqual(Container(100).Listitem.Property(Mpaa),Australia:TV-R)">special://skin/extras/images/rating/australia_r.png</value>
		<value condition="String.IsEqual(Container(100).ListItem.Property(Mpaa),Australia:X)">special://skin/extras/images/rating/australia_x.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Brazil:Livre) | String.Contains(ListItem.Property(Mpaa),Livre)">special://skin/extras/images/rating/Brazil_Livre.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Brazil:10) | String.Contains(Container(100).ListItem.Property(Mpaa),10 anos)">special://skin/extras/images/rating/Brazil_10.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Brazil:12) | String.Contains(Container(100).ListItem.Property(Mpaa),12 anos)">special://skin/extras/images/rating/Brazil_12.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Brazil:14) | String.Contains(Container(100).ListItem.Property(Mpaa),14 anos)">special://skin/extras/images/rating/Brazil_14.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Brazil:16) | String.Contains(Container(100).ListItem.Property(Mpaa),16 anos)">special://skin/extras/images/rating/Brazil_16.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),Brazil:18) | String.Contains(Container(100).ListItem.Property(Mpaa),18 anos)">special://skin/extras/images/rating/Brazil_18.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),HU-KN)">special://skin/extras/images/rating/HU_KN.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),HU-12)">special://skin/extras/images/rating/HU_12.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),HU-16)">special://skin/extras/images/rating/HU_16.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),HU-18)">special://skin/extras/images/rating/HU_18.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),TV-Y) + ![String.Contains(Container(100).ListItem.Property(Mpaa),TV-Y7) | String.Contains(ListItem.Mpaa,TV-Y7-FV)]">special://skin/extras/images/rating/TV-Y.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),TV-Y7) | String.Contains(Container(100).ListItem.Property(Mpaa),TV-Y7-FV)">special://skin/extras/images/rating/TV-Y7.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),TV-G)">special://skin/extras/images/rating/TV-G.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),TV-PG)">special://skin/extras/images/rating/TV-PG.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),TV-14)">special://skin/extras/images/rating/TV-14.png</value>
		<value condition="String.Contains(Container(100).ListItem.Property(Mpaa),TV-MA)">special://skin/extras/images/rating/TV-MA.png</value>
	</variable>
	<variable name="MediaRating">
		<value condition="String.Contains(ListItem.UserRating,10)">rating10.png</value>
		<value condition="String.Contains(ListItem.UserRating,9)">rating9.png</value>
		<value condition="String.Contains(ListItem.UserRating,8)">rating8.png</value>
		<value condition="String.Contains(ListItem.UserRating,7)">rating7.png</value>
		<value condition="String.Contains(ListItem.UserRating,6)">rating6.png</value>
		<value condition="String.Contains(ListItem.UserRating,5)">rating5.png</value>
		<value condition="String.Contains(ListItem.UserRating,4)">rating4.png</value>
		<value condition="String.Contains(ListItem.UserRating,3)">rating3.png</value>
		<value condition="String.Contains(ListItem.UserRating,2)">rating2.png</value>
		<value condition="String.Contains(ListItem.UserRating,1)">rating1.png</value>
		<value condition="String.Contains(ListItem.Rating,10)">rating10.png</value>
		<value condition="String.Contains(ListItem.Rating,9)">rating9.png</value>
		<value condition="String.Contains(ListItem.Rating,8)">rating8.png</value>
		<value condition="String.Contains(ListItem.Rating,7)">rating7.png</value>
		<value condition="String.Contains(ListItem.Rating,6)">rating6.png</value>
		<value condition="String.Contains(ListItem.Rating,5)">rating5.png</value>
		<value condition="String.Contains(ListItem.Rating,4)">rating4.png</value>
		<value condition="String.Contains(ListItem.Rating,3)">rating3.png</value>
		<value condition="String.Contains(ListItem.Rating,2)">rating2.png</value>
		<value condition="String.Contains(ListItem.Rating,1)">rating1.png</value>
		<value>blank.png</value>
	</variable>
	<variable name="SelectDialogNumObjects">
		<value condition="Control.IsVisible(3)">$INFO[Container(3).NumItems,(,)]</value>
		<value condition="Control.IsVisible(6)">$INFO[Container(6).NumItems,(,)]</value>
	</variable>
	<variable name="DelayListAnimation">
		<value condition="String.IsEqual(Skin.String(listview-idleanim),60)">60$LOCALIZE[31810]</value>
		<value condition="String.IsEqual(Skin.String(listview-idleanim),90)">90$LOCALIZE[31810]</value>
		<value condition="String.IsEqual(Skin.String(listview-idleanim),120)">120$LOCALIZE[31810]</value>
		<value>$LOCALIZE[31815]</value>
	</variable>
	<variable name="VideoInfoIcons">
		<value condition="String.IsEqual(ListItem.DBTYPE,movie)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode)">plugin://script.skin.helper.widgets/?action=similarshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="SearchInfoIcons">
		<value condition="Control.IsVisible(110)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Control.IsVisible(120) | Control.IsVisible(130) | Control.IsVisible(140)">plugin://script.skin.helper.widgets/?action=similarshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Control.IsVisible(150)">plugin://script.skin.helper.widgets/?action=inprogressandrecommended&amp;mediatype=media&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
		<value condition="Control.IsVisible(160) | Control.IsVisible(170) | Control.IsVisible(180)">plugin://script.skin.helper.widgets/?action=recommended&amp;mediatype=albums&amp;reload=$INFO[Window(Home).Property(widgetreload-music)]</value>
		<value condition="Control.IsVisible(200)">plugin://script.skin.helper.widgets/?action=channels&amp;mediatype=pvr&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
	</variable>
	<variable name="Overlay">
		<value condition="ListItem.IsResumable">OverlayPartialyWatched.png</value>
		<value condition="String.StartsWith(ListItem.Overlay,OverlayWatched)">OverlayWatched.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + !ListItem.IsParentFolder + !Integer.IsGreater(ListItem.Property(WatchedEpisodes),0)">OverlayUnwatched.png</value>
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)">OverlayPartialyWatched.png</value>
		<value condition="!ListItem.IsFolder + !Container.Content(Addons)">OverlayUnwatched.png</value>
		<value condition="!ListItem.IsParentFolder">OverlayWatched.png</value>
	</variable>
	<variable name="PVROverlay">
		<value condition="ListItem.IsRecording">overlayisrecording.png</value>
		<value condition="ListItem.HasTimer + !ListItem.IsRecording">overlayhastimer.png</value>
	</variable>
	<variable name="ListItemFlags">
		<value condition="ListItem.IsStereoscopic">listitem/3D.png</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution) + Integer.IsGreater(ListItem.VideoResolution,2000)">listitem/4K.png</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution) + Integer.IsGreater(ListItem.VideoResolution,700)">listitem/HD.png</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution)">listitem/SD.png</value>
	</variable>
	<variable name="ListItemShortcut">
		<value condition="Container.Content(movies) | Container.Content(episodes) | Container.Content(musicvideos) | Container.Content(songs) | Container.Content(playlists)">PlayMedia("$INFO[ListItem.FilenameAndPath]")</value>
		<value condition="Window.IsVisible(videos)">ActivateWindow(videos,"$INFO[ListItem.FolderPath]",return)</value>
		<value condition="Window.IsVisible(music)">ActivateWindow(music,"$INFO[ListItem.FolderPath]",return)</value>
		<value condition="Window.IsVisible(programs)">ActivateWindow(programs,"$INFO[ListItem.FolderPath]",return)</value>
	</variable>
	<variable name="ListDynamicContent">
		<value condition="Container.Content(movies)">videodb://recentlyaddedmovies/</value>
		<value condition="Container.Content(tvshows)">videodb://recentlyaddedepisodes/</value>
	</variable>
	<variable name="ListScrollNavVideo">
		<value condition="Control.IsVisible(50) + Skin.HasSetting(show-letterbar) + [Container.Content(sets) | Container.Content(movies) | Container.Content(tvshows)]">SetFocus(1260)</value>
		<value condition="Control.IsVisible(50) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1250)</value>
		<value condition="Control.IsVisible(52) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1252)</value>
		<value condition="Control.IsVisible(53) + Skin.HasSetting(show-letterbar) + [Container.Content(movies) | Container.Content(tvshows)]">SetFocus(1263)</value>
		<value condition="Control.IsVisible(53) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1253)</value>
		<value condition="Control.IsVisible(54) + Skin.HasSetting(show-letterbar) + [Container.Content(movies) | Container.Content(tvshows)]">SetFocus(1264)</value>
		<value condition="Control.IsVisible(54) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1254)</value>
		<value condition="Control.IsVisible(57) + Skin.HasSetting(show-letterbar) + [Container.Content(movies) | Container.Content(tvshows)]">SetFocus(1267)</value>
		<value condition="Control.IsVisible(57) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1257)</value>
		<value condition="Control.IsVisible(58) + Skin.HasSetting(show-letterbar) + [Container.Content(sets) | Container.Content(movies) | Container.Content(tvshows)]">SetFocus(1268)</value>
		<value condition="Control.IsVisible(58) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1258)</value>
		<value>noop</value>
	</variable>
	<variable name="ListScrollNavMusic">
		<value condition="Control.IsVisible(50) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums)]">SetFocus(1260)</value>
		<value condition="Control.IsVisible(50) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1250)</value>
		<value condition="Control.IsVisible(52) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1252)</value>
		<value condition="Control.IsVisible(53) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1253)</value>
		<value condition="Control.IsVisible(54) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums)]">SetFocus(1264)</value>
		<value condition="Control.IsVisible(54) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1254)</value>
		<value condition="Control.IsVisible(57) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums)]">SetFocus(1267)</value>
		<value condition="Control.IsVisible(57) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1257)</value>
		<value condition="Control.IsVisible(58) + Skin.HasSetting(show-letterbar) + [Container.Content(artists) | Container.Content(albums)]">SetFocus(1268)</value>
		<value condition="Control.IsVisible(58) + !String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">SetFocus(1258)</value>
		<value>noop</value>
	</variable>
	<variable name="ListScrollNavSets">
		<value condition="Control.IsVisible(50) + Container(50).Content(sets) + !Skin.HasSetting(lock-screensettings) + !ListItem.IsParentFolder">SetFocus(5050)</value>
		<value condition="Control.IsVisible(50) + !Skin.HasSetting(lock-screensettings)">SetFocus(9000)</value>
		<value condition="Control.IsVisible(58) + Container(50).Content(sets) + !Skin.HasSetting(lock-screensettings) + !ListItem.IsParentFolder">SetFocus(5058)</value>
		<value condition="Control.IsVisible(58) + !Skin.HasSetting(lock-screensettings)">SetFocus(9000)</value>
		<value condition="[Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(57)] + !Skin.HasSetting(lock-screensettings)">SetFocus(9000)</value>
		<value>noop</value>
	</variable>
	<variable name="ListSecondLine">
		<value condition="Container.Content(movies) | Container.Content(musicvideos) | Container.Content(episodes)">$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
		<value condition="Container.Content(tvshows) | Container.Content(seasons)">$INFO[ListItem.PlotOutline]</value>
		<value condition="Container.Content(addons)">$INFO[ListItem.AddonDescription]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>
	<variable name="PlayerControlRepeatImage">
		<value condition="Playlist.IsRepeatOne + Control.HasFocus(674)">osd-btn-repeatone-focus.png</value>
		<value condition="Playlist.IsRepeat + Control.HasFocus(674)">osd-btn-repeatall-focus.png</value>
		<value condition="Control.HasFocus(674)">osd-btn-repeat-focus.png</value>
		<value condition="Playlist.IsRepeatOne">osd-btn-repeatone.png</value>
		<value condition="Playlist.IsRepeat">osd-btn-repeatall.png</value>
		<value>osd-btn-repeat.png</value>
	</variable>
	<variable name="PlayStateImage">
		<value condition="Player.Caching">busy.png</value>
		<value condition="Player.Paused">osd-btn-pause-focus.png</value>
		<value condition="Player.Forwarding">osd-btn-fastfwd-focus.png</value>
		<value condition="Player.Rewinding">osd-btn-rewind-focus.png</value>
		<value condition="[Player.Rewinding2x | Player.Rewinding4x | Player.Rewinding8x | Player.Rewinding16x | Player.Rewinding32x]">osd-btn-rewind-focus.png</value>
		<value condition="[Player.Forwarding2x | Player.Forwarding4x | Player.Forwarding8x | Player.Forwarding16x | Player.Forwarding32x]">osd-btn-fastfwd-focus.png</value>
	</variable>
	<variable name="PlayStateTxt">
		<value condition="Player.Caching"> $LOCALIZE[15107] $INFO[Player.CacheLevel]%</value>
		<value condition="Player.Paused">$LOCALIZE[112]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize]</value>
		<value condition="[Player.Rewinding2x | Player.Forwarding2x]">x2</value>
		<value condition="[Player.Rewinding4x | Player.Forwarding4x]">x4</value>
		<value condition="[Player.Rewinding8x | Player.Forwarding8x]">x8</value>
		<value condition="[Player.Rewinding16x | Player.Forwarding16x]">x16</value>
		<value condition="[Player.Rewinding32x | Player.Forwarding32x]">x32</value>
		<value condition="Player.IsTempo">$INFO[Player.Playspeed,$LOCALIZE[31703] x ,]</value>
	</variable>
	<variable name="VideoDuration">
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItemDuration)) + !String.IsEqual(Window(home).Property(SkinHelper.ListItemDuration.Hours),0)">$INFO[Window(home).Property(SkinHelper.ListItemDuration.Hours),,h]$INFO[Window(home).Property(SkinHelper.ListItemDuration.Minutes),,m]</value>
		<value condition="!Window.IsVisible(tvguide) + !Window.IsVisible(radioguide)">$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
		<value>$INFO[ListItem.Duration]</value>
	</variable>
	<variable name="MovieLibEntry">
		<value condition="!Library.HasContent(movies)">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[369])">ActivateWindow(videos,MovieTitles,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20108])">ActivateWindow(videos,Movies,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20386])">ActivateWindow(videos,RecentlyAddedMovies,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[135])">ActivateWindow(videos,MovieGenres,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[652])">ActivateWindow(videos,MovieYears,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[344])">ActivateWindow(videos,MovieActors,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20348])">ActivateWindow(videos,MovieDirectors,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20388])">ActivateWindow(videos,MovieStudios,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20434])">ActivateWindow(videos,MovieSets,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20451])">ActivateWindow(videos,MovieCountries,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[20459])">ActivateWindow(videos,MovieTags,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[744])">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-movie),$LOCALIZE[31652])">$INFO[Skin.String(CustomMovieEntry.Path)]</value>
		<value>ActivateWindow(videos,MovieTitles,return)</value>
	</variable>
	<variable name="TVLibEntry">
		<value condition="!Library.HasContent(tvshows)">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[369])">ActivateWindow(videos,TvShowTitles,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[20108])">ActivateWindow(videos,TvShows,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[20387])">ActivateWindow(videos,RecentlyAddedEpisodes,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[135])">ActivateWindow(videos,TvShowGenres,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[652])">ActivateWindow(videos,TvShowYears,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[344])">ActivateWindow(videos,TvShowActors,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[20388])">ActivateWindow(videos,TvShowStudios,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[744])">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tvshow),$LOCALIZE[31652])">$INFO[Skin.String(CustomTVShowEntry.Path)]</value>
		<value>ActivateWindow(videos,TvShowTitles,return)</value>
	</variable>
	<variable name="TVEntry">
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[31703])">PlayPvrTV</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[19023])">ActivateWindow(tvchannels,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[19069])">ActivateWindow(tvguide,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[19163])">ActivateWindow(tvrecordings,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[19040])">ActivateWindow(tvtimers,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[137])">ActivateWindow(tvsearch,return)</value>
		<value>ActivateWindow(tvguide,return)</value>
	</variable>
	<variable name="RadioEntry">
		<value condition="String.IsEqual(Skin.String(libraryentry-tv),$LOCALIZE[31703])">PlayPvrRadio</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[19024])">ActivateWindow(radiochannels,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[19069])">ActivateWindow(radioguide,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[19163])">ActivateWindow(radiorecordings,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[19040])">ActivateWindow(radiotimers,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-radio),$LOCALIZE[137])">ActivateWindow(radiosearch,return)</value>
		<value>ActivateWindow(radioguide,return)</value>
	</variable>
	<variable name="MusicLibEntry">
		<value condition="!Library.HasContent(music)">ActivateWindow(music,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[20108])">ActivateWindow(music,Root,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[132])">ActivateWindow(music,Albums,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[135])">ActivateWindow(music,Genres,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[133])">ActivateWindow(music,Artists,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[134])">ActivateWindow(music,Songs,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[10504])">ActivateWindow(music,Top100Songs,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[10505])">ActivateWindow(music,Top100Albums,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[359])">ActivateWindow(music,RecentlyAddedAlbums,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[517])">ActivateWindow(music,RecentlyPlayedAlbums,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[521])">ActivateWindow(music,Compilations,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[652])">ActivateWindow(music,Years,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[1050])">ActivateWindow(music,Singles,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[744])">ActivateWindow(music,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-music),$LOCALIZE[31652])">$INFO[Skin.String(CustomMusicEntry.Path)]</value>
		<value>ActivateWindow(music,Albums,return)</value>
	</variable>
	<variable name="MusicVideoLibEntry">
		<value condition="!Library.HasContent(musicvideos)">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[369])">ActivateWindow(music,videodb://musicvideos/titles/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[20108])">ActivateWindow(music,videodb://musicvideos/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[20390])">ActivateWindow(music,videodb://recentlyaddedmusicvideos/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[135])">ActivateWindow(music,videodb://musicvideos/genres/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[652])">ActivateWindow(music,videodb://musicvideos/years/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[133])">ActivateWindow(music,videodb://musicvideos/artists/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[132])">ActivateWindow(music,videodb://musicvideos/albums/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[20348])">ActivateWindow(music,videodb://musicvideos/directors/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[20388])">ActivateWindow(music,videodb://musicvideos/studios/,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[744])">ActivateWindow(videos,Files,return)</value>
		<value condition="String.IsEqual(Skin.String(libraryentry-musicvideo),$LOCALIZE[31652])">$INFO[Skin.String(CustomMusicVideoEntry.Path)]</value>
		<value>ActivateWindow(music,videodb://musicvideos/titles/,return)</value>
	</variable>
	<variable name="VideoHeadings">
		<value condition="Container.Content(movies)">$LOCALIZE[20342]</value>
		<value condition="Container.Content(tvshows)">$LOCALIZE[31027]</value>
		<value condition="Container.Content(actors)">$LOCALIZE[344]</value>
		<value condition="Container.Content(genres)">$LOCALIZE[135]</value>
		<value condition="Container.Content(years)">$LOCALIZE[652]</value>
		<value condition="Container.Content(studios)">$LOCALIZE[20388]</value>
		<value condition="Container.Content(directors)">$LOCALIZE[20348]</value>
		<value condition="Container.Content(musicvideos)">$LOCALIZE[20389]</value>
		<value condition="Container.Content(playlists)">$LOCALIZE[136]</value>
		<value condition="Container.Content(addons)">$LOCALIZE[31696]</value>
		<value condition="Container.Content(files)">$LOCALIZE[744]</value>
		<value condition="!String.IsEmpty(Container.FolderName) + !String.IsEmpty(ListItem.Label)">$INFO[Container.FolderName]</value>
		<value>$LOCALIZE[3]</value>
	</variable>
	<variable name="MusicHeadings">
		<value condition="Container.Content(artists)">$LOCALIZE[133]</value>
		<value condition="Container.Content(albums)">$LOCALIZE[132]</value>
		<value condition="Container.Content(genres)">$LOCALIZE[135]</value>
		<value condition="Container.Content(years)">$LOCALIZE[652]</value>
		<value condition="Container.Content(studios)">$LOCALIZE[20388]</value>
		<value condition="Container.Content(directors)">$LOCALIZE[20348]</value>
		<value condition="Container.Content(musicvideos)">$LOCALIZE[20389]</value>
		<value condition="Container.Content(playlists)">$LOCALIZE[136]</value>
		<value condition="Container.Content(addons)">$LOCALIZE[31697]</value>
		<value condition="Container.Content(files)">$LOCALIZE[744]</value>
		<value condition="!String.IsEmpty(Container.FolderName) + !String.IsEmpty(ListItem.Label)">$INFO[Container.FolderName]</value>
		<value>$LOCALIZE[31030]</value>
	</variable>
	<variable name="PVRHeading">
		<value condition="Control.IsVisible(10)">$LOCALIZE[22020]</value>
		<!-- Timeline -->
		<value condition="Control.IsVisible(11)">$LOCALIZE[19030]</value>
		<!-- Now -->
		<value condition="Control.IsVisible(12)">$LOCALIZE[19031]</value>
		<!-- Next -->
		<value condition="Control.IsVisible(13) + !String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19024]</value>
		<!-- TV Channels -->
		<value condition="Control.IsVisible(13) + String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19023]</value>
		<!-- Radio Channels -->
		<value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[137]</value>
		<!-- Search -->
		<value condition="Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[19040]</value>
		<!-- Timer -->
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[20007]</value>
		<!-- Recordings -->
		<value>$INFO[Container.FolderName]</value>
	</variable>
	<variable name="CustomFavHeading">
		<value condition="String.IsEmpty(Skin.String(CustomFav.Heading))">$LOCALIZE[20190]</value>
		<value condition="!String.IsEmpty(Skin.String(CustomFav.Heading))">$INFO[Skin.String(CustomFav.Heading)]</value>
	</variable>
	<variable name="PVRChannelManagerHeading">
		<value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19023]</value>
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
	</variable>
	<variable name="PVRChannelManagerSubHeading">
		<value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19023]</value>
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19024]</value>
	</variable>
	<variable name="PVRChannelOSDHeading">
		<value condition="pvr.IsPlayingRadio">$LOCALIZE[19024] - $INFO[MusicPlayer.ChannelGroup]</value>
		<value condition="!pvr.IsPlayingRadio">$LOCALIZE[19023] - $INFO[VideoPlayer.ChannelGroup]</value>
	</variable>
	<variable name="CustomDialogSelectHeading">
		<value condition="String.IsEqual(Window(home).Property(SelectDialogType),videoinfomore)">$LOCALIZE[31693]</value>
		<value condition="String.IsEqual(Window(home).Property(SelectDialogType),musicinfomore)">$LOCALIZE[31693]</value>
	</variable>
	<variable name="IconBanner">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconPoster">
		<value condition="!Container().Scrolling + !System.ScreenSaverActive + !IsEmpty(ListItem.Art(animatedposter)) + Skin.HasSetting(SkinHelper.EnableAnimatedPosters)">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon) + ListItem.IsParentFolder">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Icon) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="String.IsEmpty(Container.Content) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="Container.Content(studios) + !String.IsEmpty(Skin.String(custom-moviestudioicons.path))">$INFO[Skin.String(custom-moviestudioicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(custom-moviestudioicons.ext)]</value>
		<value condition="Container.Content(genres) + !String.IsEmpty(Skin.String(custom-moviegenresicons.path))">$INFO[Skin.String(custom-moviegenresicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(custom-moviegenresicons.ext)]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultYear.png</value>
		<value condition="Container.Content(playlists)">DefaultPlaylist.png</value>
		<value condition="Container.Content(musicvideos)">DefaultMusicVideos.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultVideo.png</value>
	</variable>
	<variable name="Icon(-5)Poster">
		<value condition="!String.IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value>$INFO[ListItem(-5).Icon]</value>
	</variable>
	<variable name="Icon(-4)Poster">
		<value condition="!String.IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value>$INFO[ListItem(-4).Icon]</value>
	</variable>
	<variable name="Icon(-3)Poster">
		<value condition="!String.IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>
	<variable name="Icon(-2)Poster">
		<value condition="!String.IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>
	<variable name="Icon(-1)Poster">
		<value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>
	<variable name="Icon(0)Poster">
		<value condition="!String.IsEmpty(ListItem(0).Art(poster))">$INFO[ListItem(0).Art(poster)]</value>
		<value>$INFO[ListItem(0).Icon]</value>
	</variable>
	<variable name="Icon(1)Poster">
		<value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>
	<variable name="Icon(2)Poster">
		<value condition="!String.IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	<variable name="Icon(3)Poster">
		<value condition="!String.IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>
	<variable name="Icon(4)Poster">
		<value condition="!String.IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value>$INFO[ListItem(4).Icon]</value>
	</variable>
	<variable name="Icon(5)Poster">
		<value condition="!String.IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value>$INFO[ListItem(5).Icon]</value>
	</variable>
	<variable name="IconCover">
		<value condition="!String.IsEmpty(ListItem.Icon) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon) + ListItem.IsParentFolder">$INFO[ListItem.Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem.Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-5)Cover">
		<value condition="!String.IsEmpty(ListItem(-5).Icon) + !String.Contains(ListItem(-5).Icon,Default)">$INFO[ListItem(-5).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Art(thumb))">$INFO[ListItem(-5).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Icon) + String.Contains(ListItem(-5).Icon,DefaultFolderBack)">$INFO[ListItem(-5).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-5).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-4)Cover">
		<value condition="!String.IsEmpty(ListItem(-4).Icon) + !String.Contains(ListItem(-4).Icon,Default)">$INFO[ListItem(-4).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Art(thumb))">$INFO[ListItem(-4).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Icon) + String.Contains(ListItem(-4).Icon,DefaultFolderBack)">$INFO[ListItem(-4).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-4).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-3)Cover">
		<value condition="!String.IsEmpty(ListItem(-3).Icon) + !String.Contains(ListItem(-3).Icon,Default)">$INFO[ListItem(-3).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Art(thumb))">$INFO[ListItem(-3).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Icon) + String.Contains(ListItem(-3).Icon,DefaultFolderBack)">$INFO[ListItem(-3).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-3).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-2)Cover">
		<value condition="!String.IsEmpty(ListItem(-2).Icon) + !String.Contains(ListItem(-2).Icon,Default)">$INFO[ListItem(-2).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Art(thumb))">$INFO[ListItem(-2).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Icon) + String.Contains(ListItem(-2).Icon,DefaultFolderBack)">$INFO[ListItem(-2).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-2).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(-1)Cover">
		<value condition="!String.IsEmpty(ListItem(-1).Icon) + !String.Contains(ListItem(-1).Icon,Default)">$INFO[ListItem(-1).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Art(thumb))">$INFO[ListItem(-1).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Icon) + String.Contains(ListItem(-1).Icon,DefaultFolderBack)">$INFO[ListItem(-1).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(-1).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(0)Cover">
		<value condition="!String.IsEmpty(ListItem(0).Icon) + !String.Contains(ListItem(0).Icon,Default)">$INFO[ListItem(0).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(0).Art(thumb))">$INFO[ListItem(0).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(0).Icon) + String.Contains(ListItem(0).Icon,DefaultFolderBack)">$INFO[ListItem(0).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(0).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(1)Cover">
		<value condition="!String.IsEmpty(ListItem(1).Icon) + !String.Contains(ListItem(1).Icon,Default)">$INFO[ListItem(1).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(1).Art(thumb))">$INFO[ListItem(1).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(1).Icon) + String.Contains(ListItem(1).Icon,DefaultFolderBack)">$INFO[ListItem(1).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(1).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(2)Cover">
		<value condition="!String.IsEmpty(ListItem(2).Icon) + !String.Contains(ListItem(2).Icon,Default)">$INFO[ListItem(2).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(2).Art(thumb))">$INFO[ListItem(2).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(2).Icon) + String.Contains(ListItem(2).Icon,DefaultFolderBack)">$INFO[ListItem(2).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(2).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(3)Cover">
		<value condition="!String.IsEmpty(ListItem(3).Icon) + !String.Contains(ListItem(3).Icon,Default)">$INFO[ListItem(3).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(3).Art(thumb))">$INFO[ListItem(3).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(3).Icon) + String.Contains(ListItem(3).Icon,DefaultFolderBack)">$INFO[ListItem(3).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(3).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(4)Cover">
		<value condition="!String.IsEmpty(ListItem(4).Icon) + !String.Contains(ListItem(4).Icon,Default)">$INFO[ListItem(4).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(4).Art(thumb))">$INFO[ListItem(4).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(4).Icon) + String.Contains(ListItem(4).Icon,DefaultFolderBack)">$INFO[ListItem(4).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(4).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(5)Cover">
		<value condition="!String.IsEmpty(ListItem(5).Icon) + !String.Contains(ListItem(5).Icon,Default)">$INFO[ListItem(5).Icon]</value>
		<value condition="!String.IsEmpty(ListItem(5).Art(thumb))">$INFO[ListItem(5).Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem(5).Icon) + String.Contains(ListItem(5).Icon,DefaultFolderBack)">$INFO[ListItem(5).Icon]</value>
		<value condition="Container.Content(genres)">$INFO[Skin.String(custom-musicgenresicons.path)]$INFO[ListItem(5).Label]$INFO[Skin.String(custom-musicgenresicons.ext)]</value>
		<value condition="Container.Content(artists)">DefaultUser.png</value>
		<value condition="Container.Content(years)">DefaultMusicYears.png</value>
		<value condition="Container.Content(addons)">DefaultAddon.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="Icon(8)Poster">
		<value condition="Container.Position(0) + !String.IsEmpty(Container.ListItemNoWrap(8).Art(poster))">$INFO[Container.ListItemNoWrap(8).Art(poster)]</value>
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(1) + !String.IsEmpty(Container.ListItemNoWrap(7).Art(poster))">$INFO[Container.ListItemNoWrap(7).Art(poster)]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(2) + !String.IsEmpty(Container.ListItemNoWrap(6).Art(poster))">$INFO[Container.ListItemNoWrap(6).Art(poster)]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(3) + !String.IsEmpty(Container.ListItemNoWrap(5).Art(poster))">$INFO[Container.ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(4) + !String.IsEmpty(Container.ListItemNoWrap(4).Art(poster))">$INFO[Container.ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(5) + !String.IsEmpty(Container.ListItemNoWrap(3).Art(poster))">$INFO[Container.ListItemNoWrap(3).Art(poster)]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(6) + !String.IsEmpty(Container.ListItemNoWrap(2).Art(poster))">$INFO[Container.ListItemNoWrap(2).Art(poster)]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
		<value condition="Container.Position(7) + !String.IsEmpty(Container.ListItemNoWrap(1).Art(poster))">$INFO[Container.ListItemNoWrap(1).Art(poster)]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="Icon(9)Poster">
		<value condition="Container.Position(0) + !String.IsEmpty(Container.ListItemNoWrap(9).Art(poster))">$INFO[Container.ListItemNoWrap(9).Art(poster)]</value>
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(1) + !String.IsEmpty(Container.ListItemNoWrap(8).Art(poster))">$INFO[Container.ListItemNoWrap(8).Art(poster)]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(2) + !String.IsEmpty(Container.ListItemNoWrap(7).Art(poster))">$INFO[Container.ListItemNoWrap(7).Art(poster)]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(3) + !String.IsEmpty(Container.ListItemNoWrap(6).Art(poster))">$INFO[Container.ListItemNoWrap(6).Art(poster)]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(4) + !String.IsEmpty(Container.ListItemNoWrap(5).Art(poster))">$INFO[Container.ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(5) + !String.IsEmpty(Container.ListItemNoWrap(4).Art(poster))">$INFO[Container.ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(6) + !String.IsEmpty(Container.ListItemNoWrap(3).Art(poster))">$INFO[Container.ListItemNoWrap(3).Art(poster)]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(7) + !String.IsEmpty(Container.ListItemNoWrap(2).Art(poster))">$INFO[Container.ListItemNoWrap(2).Art(poster)]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
	</variable>
	<variable name="Icon(10)Poster">
		<value condition="Container.Position(0) + !String.IsEmpty(Container.ListItemNoWrap(10).Art(poster))">$INFO[Container.ListItemNoWrap(10).Art(poster)]</value>
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(1) + !String.IsEmpty(Container.ListItemNoWrap(9).Art(poster))">$INFO[Container.ListItemNoWrap(9).Art(poster)]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(2) + !String.IsEmpty(Container.ListItemNoWrap(8).Art(poster))">$INFO[Container.ListItemNoWrap(8).Art(poster)]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(3) + !String.IsEmpty(Container.ListItemNoWrap(7).Art(poster))">$INFO[Container.ListItemNoWrap(7).Art(poster)]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(4) + !String.IsEmpty(Container.ListItemNoWrap(6).Art(poster))">$INFO[Container.ListItemNoWrap(6).Art(poster)]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(5) + !String.IsEmpty(Container.ListItemNoWrap(5).Art(poster))">$INFO[Container.ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(6) + !String.IsEmpty(Container.ListItemNoWrap(4).Art(poster))">$INFO[Container.ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(7) + !String.IsEmpty(Container.ListItemNoWrap(3).Art(poster))">$INFO[Container.ListItemNoWrap(3).Art(poster)]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
	</variable>
	<variable name="Icon(11)Poster">
		<value condition="Container.Position(0) + !String.IsEmpty(Container.ListItemNoWrap(11).Art(poster))">$INFO[Container.ListItemNoWrap(11).Art(poster)]</value>
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(1) + !String.IsEmpty(Container.ListItemNoWrap(10).Art(poster))">$INFO[Container.ListItemNoWrap(10).Art(poster)]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(2) + !String.IsEmpty(Container.ListItemNoWrap(9).Art(poster))">$INFO[Container.ListItemNoWrap(9).Art(poster)]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(3) + !String.IsEmpty(Container.ListItemNoWrap(8).Art(poster))">$INFO[Container.ListItemNoWrap(8).Art(poster)]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(4) + !String.IsEmpty(Container.ListItemNoWrap(7).Art(poster))">$INFO[Container.ListItemNoWrap(7).Art(poster)]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(5) + !String.IsEmpty(Container.ListItemNoWrap(6).Art(poster))">$INFO[Container.ListItemNoWrap(6).Art(poster)]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(6) + !String.IsEmpty(Container.ListItemNoWrap(5).Art(poster))">$INFO[Container.ListItemNoWrap(5).Art(poster)]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(7) + !String.IsEmpty(Container.ListItemNoWrap(4).Art(poster))">$INFO[Container.ListItemNoWrap(4).Art(poster)]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
	</variable>
	<variable name="Icon(8)VideoIcon">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="Icon(9)VideoIcon">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
	</variable>
	<variable name="Icon(10)VideoIcon">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
	</variable>
	<variable name="Icon(11)VideoIcon">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
	</variable>
	<variable name="Icon(10)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="Icon(11)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(2).Icon]</value>
	</variable>
	<variable name="Icon(12)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(12).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(3).Icon]</value>
	</variable>
	<variable name="Icon(13)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(13).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(12).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(4).Icon]</value>
	</variable>
	<variable name="Icon(14)Thumb">
		<value condition="Container.Position(0)">$INFO[Container.ListItemNoWrap(14).Icon]</value>
		<value condition="Container.Position(1)">$INFO[Container.ListItemNoWrap(13).Icon]</value>
		<value condition="Container.Position(2)">$INFO[Container.ListItemNoWrap(12).Icon]</value>
		<value condition="Container.Position(3)">$INFO[Container.ListItemNoWrap(11).Icon]</value>
		<value condition="Container.Position(4)">$INFO[Container.ListItemNoWrap(10).Icon]</value>
		<value condition="Container.Position(5)">$INFO[Container.ListItemNoWrap(9).Icon]</value>
		<value condition="Container.Position(6)">$INFO[Container.ListItemNoWrap(8).Icon]</value>
		<value condition="Container.Position(7)">$INFO[Container.ListItemNoWrap(7).Icon]</value>
		<value condition="Container.Position(8)">$INFO[Container.ListItemNoWrap(6).Icon]</value>
		<value condition="Container.Position(9)">$INFO[Container.ListItemNoWrap(5).Icon]</value>
	</variable>
	<variable name="VideoLogo">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo)) + [String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,movie)]">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEqual(ListItem.DBTYPE,tvshow)">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.Clearlogo)) + !ListItem.IsParentFolder">$INFO[Window(home).Property(SkinHelper.ListItem.Art.Clearlogo)]</value>
	</variable>
	<variable name="ListViewVideoLogo">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo)) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(movies)]">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.Clearlogo)) + !ListItem.IsParentFolder">$INFO[Window(home).Property(SkinHelper.ListItem.Art.Clearlogo)]</value>
	</variable>
	<variable name="PlayerVideoArt">
		<value condition="[VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)] + !String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
		<value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
		<value condition="!String.IsEmpty(Player.Art(clearlogo)) + [VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)]">$INFO[Player.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster)) + VideoPlayer.Content(movies)">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.cover) + VideoPlayer.Content(movies)">$INFO[VideoPlayer.Cover]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.banner)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="PlayerVideoCover">
		<value condition="!String.IsEmpty(Player.Art(poster)) + VideoPlayer.Content(movies)">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.cover) + VideoPlayer.Content(movies)">$INFO[VideoPlayer.Cover]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.banner)) + VideoPlayer.Content(episodes)">$INFO[Player.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
	</variable>
	<variable name="PlayerMusicCover">
		<value condition="!IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Thumb))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Thumb)]</value>
		<value condition="Pvr.IsPlayingRadio + !String.IsEmpty(Window(home).Property(SkinHelper.PVR.ChannelLogo))">Window(home).Property(SkinHelper.PVR.ChannelLogo)</value>
		<value condition="!String.IsEmpty(MusicPlayer.Cover)">$INFO[MusicPlayer.Cover]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
		<value condition="Pvr.IsPlayingRadio">icon-radio.png</value>
		<value>DefaultAudio.png</value>
	</variable>
	<variable name="PlayerMusicAlbum">
		<value condition="!IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Album))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Album)]</value>
		<value>$INFO[MusicPlayer.Album]</value>
	</variable>
	<variable name="PlayerMusicArtist">
		<value condition="String.IsEmpty(MusicPlayer.TimeRemaining) + !IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Artist))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Artist)]</value>
		<value condition="!Pvr.IsPlayingRadio + String.Contains(MusicPlayer.Genre,Classical)">$INFO[MusicPlayer.Artist] - $INFO[MusicPlayer.Property(Role.Composer)]</value>
		<value>$INFO[MusicPlayer.Artist]</value>
	</variable>
	<variable name="PlayerMusicTitle">
		<value condition="!IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Title))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Title)]</value>
		<value condition="Player.HasAudio + Pvr.IsPlayingRadio">$LOCALIZE[19021] - $INFO[MusicPlayer.ChannelName][CR]$INFO[MusicPlayer.Title]</value>
		<value>$INFO[MusicPlayer.Title]</value>
	</variable>
	<variable name="PlayerMusicTrack">
		<value condition="String.IsEmpty(MusicPlayer.TimeRemaining) + !IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Title))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Title)]</value>
		<value condition="!Pvr.IsPlayingRadio + String.Contains(MusicPlayer.Genre,Classical)">$INFO[MusicPlayer.TrackNumber] - $INFO[MusicPlayer.Title]</value>
		<value condition="Pvr.IsPlayingRadio">$INFO[MusicPlayer.ChannelName] - $INFO[MusicPlayer.Title]</value>
		<value>$INFO[MusicPlayer.Title]</value>
	</variable>
	<variable name="PlayerMusicSubTitle">
		<value condition="!IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Artist))">$INFO[Window(home).Property(plugin.audio.streaming-radio.Artist)]</value>
		<value condition="Player.HasAudio + !Pvr.IsPlayingRadio">$INFO[MusicPlayer.Artist]</value>
		<value condition="Player.HasAudio + Pvr.IsPlayingRadio">$INFO[MusicPlayer.ChannelName]</value>
	</variable>
	<variable name="PVRThumb">
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
		<value condition="!IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
		<value condition="String.IsEmpty(Window.Property(IsRadio))">icon-livetv.png</value>
		<value>icon-radio.png</value>
	</variable>
	<variable name="PVRPgmIcon">
		<value condition="!IsEmpty(Window(home).Property(SkinHelper.PVR.Poster))">$INFO[Window(home).Property(SkinHelper.PVR.Poster)]</value>
		<value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.Poster))">$INFO[Window(home).Property(SkinHelper.ListItem.Poster)]</value>
		<value condition="!IsEmpty(Window(home).Property(SkinHelper.PVR.Thumb))">$INFO[Window(home).Property(SkinHelper.PVR.Thumb)]</value>
		<value condition="!IsEmpty(Window(home).Property(SkinHelper.PVR.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.PVR.ChannelLogo)]</value>
		<value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
		<value condition="!IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
		<value condition="String.IsEmpty(Window.Property(IsRadio))">icon-livetv.png</value>
		<value>icon-radio.png</value>
	</variable>
	<variable name="PVRIcon">
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="!IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
	</variable>
	<variable name="HorzHomeShelfIcon">
		<value condition="Control.HasFocus(9100) | Control.HasFocus(9130)">DefaultVideo.png</value>
		<!--Video shelf Icon -->
		<value condition="Control.HasFocus(9300) | Control.HasFocus(9330)">DefaultPicture.png</value>
		<!--Picture shelf Icon -->
		<value condition="Control.HasFocus(9350) | Control.HasFocus(9380)">DefaultAddon.png</value>
		<!--Addon shelf Icon -->
		<value condition="String.IsEmpty(Skin.String(CustomFav.Icon)) + [Control.HasFocus(9550) | Control.HasFocus(9580)]">icon-fav.png</value>
		<!--Custom Favourites shelf Icon -->
		<value condition="!String.IsEmpty(Skin.String(CustomFav.Icon)) + [Control.HasFocus(9550) | Control.HasFocus(9580)]">$INFO[Skin.String(CustomFav.Icon)]</value>
		<!--Custom Favourites shelf Icon -->
		<value condition="Control.HasFocus(9500) | Control.HasFocus(9530)">icon-broadcast.png</value>
		<!--Broadcast shelf Icon -->
		<value condition="Control.HasFocus(9450) | Control.HasFocus(9480)">icon-settings.png</value>
		<!--Setting shelf Icon -->
	</variable>
	<variable name="MovieShelfIcon0">
		<value condition="Container(9160).Position(0)">$INFO[Container(9160).ListItemNoWrap(-1).Thumb]</value>
		<value condition="Container(9160).Position(1)">$INFO[Container(9160).ListItemNoWrap(-2).Thumb]</value>
		<value condition="Container(9160).Position(2)">$INFO[Container(9160).ListItemNoWrap(-3).Thumb]</value>
		<value condition="Container(9160).Position(3)">$INFO[Container(9160).ListItemNoWrap(-4).Thumb]</value>
		<value condition="Container(9160).Position(4)">$INFO[Container(9160).ListItemNoWrap(-5).Thumb]</value>
		<value condition="Container(9160).Position(5)">$INFO[Container(9160).ListItemNoWrap(-6).Thumb]</value>
	</variable>
	<variable name="MovieShelfIcon7">
		<value condition="Container(9160).Position(0)">$INFO[Container(9160).ListItemNoWrap(6).Thumb]</value>
		<value condition="Container(9160).Position(1)">$INFO[Container(9160).ListItemNoWrap(5).Thumb]</value>
		<value condition="Container(9160).Position(2)">$INFO[Container(9160).ListItemNoWrap(4).Thumb]</value>
		<value condition="Container(9160).Position(3)">$INFO[Container(9160).ListItemNoWrap(3).Thumb]</value>
		<value condition="Container(9160).Position(4)">$INFO[Container(9160).ListItemNoWrap(2).Thumb]</value>
		<value condition="Container(9160).Position(5)">$INFO[Container(9160).ListItemNoWrap(1).Thumb]</value>
	</variable>
	<variable name="TVShowShelfIcon0">
		<value condition="Container(9210).Position(0) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(-1).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(0) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(-1).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(-1).Thumb]</value>
		<value condition="Container(9210).Position(1) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(-2).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(1) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(-2).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(-2).Thumb]</value>
		<value condition="Container(9210).Position(2) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(-3).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(2) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(-3).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(-3).Thumb]</value>
		<value condition="Container(9210).Position(3) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(-4).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(3) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(-4).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(-4).Thumb]</value>
		<value condition="Container(9210).Position(4) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(-5).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(4) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(-5).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(-5).Thumb]</value>
	</variable>
	<variable name="TVShowShelfIcon6">
		<value condition="Container(9210).Position(0) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(5).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(0) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(5).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(5).Thumb]</value>
		<value condition="Container(9210).Position(1) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(4).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(1) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(4).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(4).Thumb]</value>
		<value condition="Container(9210).Position(2) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(3).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(2) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(3).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(3).Thumb]</value>
		<value condition="Container(9210).Position(3) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(2).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(3) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(2).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(2).Thumb]</value>
		<value condition="Container(9210).Position(4) + [String.IsEmpty(Skin.String(shelf-tvshowimgtyp)) | String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31950])]">$INFO[Container(9210).ListItemNoWrap(1).Art(tvshow.poster)]</value>
		<value condition="Container(9210).Position(4) + String.IsEqual(Skin.String(shelf-tvshowimgtyp),$LOCALIZE[31949])">$INFO[Container(9210).ListItemNoWrap(1).Art(tvshow.banner)]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(1).Thumb]</value>
	</variable>
	<variable name="TVShowShelfArt0">
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(-1).Thumb]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(-2).Thumb]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(-3).Thumb]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(-4).Thumb]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(-5).Thumb]</value>
	</variable>
	<variable name="TVShowShelfArt6">
		<value condition="Container(9210).Position(0)">$INFO[Container(9210).ListItemNoWrap(5).Thumb]</value>
		<value condition="Container(9210).Position(1)">$INFO[Container(9210).ListItemNoWrap(4).Thumb]</value>
		<value condition="Container(9210).Position(2)">$INFO[Container(9210).ListItemNoWrap(3).Thumb]</value>
		<value condition="Container(9210).Position(3)">$INFO[Container(9210).ListItemNoWrap(2).Thumb]</value>
		<value condition="Container(9210).Position(4)">$INFO[Container(9210).ListItemNoWrap(1).Thumb]</value>
	</variable>
	<variable name="BroadcastShelfIcon0">
		<value condition="Container(9510).Position(0)">$INFO[Container(9510).ListItemNoWrap(-1).Icon]</value>
		<value condition="Container(9510).Position(1)">$INFO[Container(9510).ListItemNoWrap(-2).Icon]</value>
		<value condition="Container(9510).Position(2)">$INFO[Container(9510).ListItemNoWrap(-3).Icon]</value>
		<value condition="Container(9510).Position(3)">$INFO[Container(9510).ListItemNoWrap(-4).Icon]</value>
		<value condition="Container(9510).Position(4)">$INFO[Container(9510).ListItemNoWrap(-5).Icon]</value>
	</variable>
	<variable name="BroadcastShelfIcon6">
		<value condition="Container(9510).Position(0)">$INFO[Container(9510).ListItemNoWrap(5).Icon]</value>
		<value condition="Container(9510).Position(1)">$INFO[Container(9510).ListItemNoWrap(4).Icon]</value>
		<value condition="Container(9510).Position(2)">$INFO[Container(9510).ListItemNoWrap(3).Icon]</value>
		<value condition="Container(9510).Position(3)">$INFO[Container(9510).ListItemNoWrap(2).Icon]</value>
		<value condition="Container(9510).Position(4)">$INFO[Container(9510).ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="MusicShelfIcon0">
		<value condition="Container(9260).Position(0)">$INFO[Container(9260).ListItemNoWrap(-1).Thumb]</value>
		<value condition="Container(9260).Position(1)">$INFO[Container(9260).ListItemNoWrap(-2).Thumb]</value>
		<value condition="Container(9260).Position(2)">$INFO[Container(9260).ListItemNoWrap(-3).Thumb]</value>
		<value condition="Container(9260).Position(3)">$INFO[Container(9260).ListItemNoWrap(-4).Thumb]</value>
		<value condition="Container(9260).Position(4)">$INFO[Container(9260).ListItemNoWrap(-5).Thumb]</value>
		<value condition="Container(9260).Position(5)">$INFO[Container(9260).ListItemNoWrap(-6).Thumb]</value>
	</variable>
	<variable name="MusicShelfIcon6">
		<value condition="Container(9260).Position(0)">$INFO[Container(9260).ListItemNoWrap(5).Thumb]</value>
		<value condition="Container(9260).Position(1)">$INFO[Container(9260).ListItemNoWrap(4).Thumb]</value>
		<value condition="Container(9260).Position(2)">$INFO[Container(9260).ListItemNoWrap(3).Thumb]</value>
		<value condition="Container(9260).Position(3)">$INFO[Container(9260).ListItemNoWrap(2).Thumb]</value>
		<value condition="Container(9260).Position(4)">$INFO[Container(9260).ListItemNoWrap(1).Thumb]</value>
	</variable>
	<variable name="AddonShelfIcon0">
		<value condition="Container(9360).Position(0)">$INFO[Container(9360).ListItemNoWrap(-1).Thumb]</value>
		<value condition="Container(9360).Position(1)">$INFO[Container(9360).ListItemNoWrap(-2).Thumb]</value>
		<value condition="Container(9360).Position(2)">$INFO[Container(9360).ListItemNoWrap(-3).Thumb]</value>
		<value condition="Container(9360).Position(3)">$INFO[Container(9360).ListItemNoWrap(-4).Thumb]</value>
		<value condition="Container(9360).Position(4)">$INFO[Container(9360).ListItemNoWrap(-5).Thumb]</value>
		<value condition="Container(9360).Position(5)">$INFO[Container(9360).ListItemNoWrap(-6).Thumb]</value>
	</variable>
	<variable name="AddonShelfIcon6">
		<value condition="Container(9360).Position(0)">$INFO[Container(9360).ListItemNoWrap(5).Thumb]</value>
		<value condition="Container(9360).Position(1)">$INFO[Container(9360).ListItemNoWrap(4).Thumb]</value>
		<value condition="Container(9360).Position(2)">$INFO[Container(9360).ListItemNoWrap(3).Thumb]</value>
		<value condition="Container(9360).Position(3)">$INFO[Container(9360).ListItemNoWrap(2).Thumb]</value>
		<value condition="Container(9360).Position(4)">$INFO[Container(9360).ListItemNoWrap(1).Thumb]</value>
	</variable>
	<variable name="CustomShelfIcon0">
		<value condition="Container(9510).Position(0)">$INFO[Container(9510).ListItemNoWrap(-1).Icon]</value>
		<value condition="Container(9510).Position(1)">$INFO[Container(9510).ListItemNoWrap(-2).Icon]</value>
		<value condition="Container(9510).Position(2)">$INFO[Container(9510).ListItemNoWrap(-3).Icon]</value>
		<value condition="Container(9510).Position(3)">$INFO[Container(9510).ListItemNoWrap(-4).Icon]</value>
		<value condition="Container(9510).Position(4)">$INFO[Container(9510).ListItemNoWrap(-5).Icon]</value>
	</variable>
	<variable name="CustomShelfIcon6">
		<value condition="Container(9560).Position(0)">$INFO[Container(9560).ListItemNoWrap(5).Icon]</value>
		<value condition="Container(9560).Position(1)">$INFO[Container(9560).ListItemNoWrap(4).Icon]</value>
		<value condition="Container(9560).Position(2)">$INFO[Container(9560).ListItemNoWrap(3).Icon]</value>
		<value condition="Container(9560).Position(3)">$INFO[Container(9560).ListItemNoWrap(2).Icon]</value>
		<value condition="Container(9560).Position(4)">$INFO[Container(9560).ListItemNoWrap(1).Icon]</value>
	</variable>
	<variable name="WeatherView">
		<value condition="!String.Contains(Weather.plugin,weather.openweathermap.extended) + !String.Contains(Weather.plugin,weather.ozweather)">Skin.SetString(weather-view,$LOCALIZE[10508])</value>
		<!-- Standard Forecast if not using extended forecast plugins -->
		<value condition="[String.IsEqual(Skin.String(weather-view),$LOCALIZE[10508]) | String.IsEmpty(Skin.String(weather-view))] + String.Contains(Weather.plugin,weather.ozweather)">Skin.SetString(weather-view,$LOCALIZE[33035])</value>
		<!-- Maps -->
		<value condition="[String.IsEqual(Skin.String(weather-view),$LOCALIZE[10508]) | String.IsEmpty(Skin.String(weather-view))] + String.Contains(Weather.plugin,weather.openweathermap.extended)">Skin.SetString(weather-view,$LOCALIZE[33034])</value>
		<!-- 36 Hour forecast -->
		<value condition="String.IsEqual(Skin.String(weather-view),$LOCALIZE[33034]) + String.Contains(Weather.plugin,weather.openweathermap.extended)">Skin.SetString(weather-view,$LOCALIZE[33037])</value>
		<!-- Weekend forecast -->
		<value condition="String.IsEqual(Skin.String(weather-view),$LOCALIZE[33037]) + String.Contains(Weather.plugin,weather.openweathermap.extended)">Skin.SetString(weather-view,$LOCALIZE[33036])</value>
		<!-- Hourly -->
		<value condition="String.IsEqual(Skin.String(weather-view),$LOCALIZE[33036]) + String.Contains(Weather.plugin,weather.openweathermap.extended)">Skin.SetString(weather-view,$LOCALIZE[10508])</value>
		<!-- Maps -->
		<value condition="String.IsEqual(Skin.String(weather-view),$LOCALIZE[33035]) + String.Contains(Weather.plugin,weather.ozweather)">Skin.SetString(weather-view,$LOCALIZE[10508])</value>
		<!-- Standard Forecast -->
		<value>Skin.SetString(weather-view,$LOCALIZE[10508])</value>
		<!-- Fall thru default (Standard forecast) -->
	</variable>
	<variable name="QuitAction">
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13009])">Quit()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13013])">Reboot()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[31554])">System.ExecWait("/usr/sbin/rebootfromnand")</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13005])">PowerDown()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13010])">Hibernate()</value>
		<value condition="String.IsEqual(Skin.String(home-quitaction),$LOCALIZE[13011])">Suspend()</value>
		<value>ActivateWindow(shutdownmenu)</value>
	</variable>
	<variable name="NextAiredFanart">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Fanart)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Fanart)]</value>
	</variable>
	<variable name="NextAiredLabel1">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Label]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Label]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Label]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Label]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Label]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Label]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Label]</value>
	</variable>
	<variable name="NextAiredLabel2">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(NextTitle)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(NextTitle)]</value>
	</variable>
	<variable name="NextAiredLabel3">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(RunTime),,$LOCALIZE[12391]]</value>
	</variable>
	<variable name="NextAiredLabel4">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Genre)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Genre)]</value>
	</variable>
	<variable name="NextAiredLabel5">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(ShortTime)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(ShortTime)]</value>
	</variable>
	<variable name="NextAiredLabel6">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(NextDate)]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(NextDate)]</value>
	</variable>
	<variable name="NextAiredImage1">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Art(poster))]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Art(poster))]</value>
	</variable>
	<variable name="NextAiredImage2">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Path),,landscape.jpg]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Path),,landscape.jpg]</value>
	</variable>
	<variable name="NextAiredImage3">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Path),,logo.png]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Path),,logo.png]</value>
	</variable>
	<variable name="NextAiredImage5">
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Art(banner))]</value>
		<value condition="Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Art(banner))]</value>
	</variable>
	<variable name="SystemPlatform">
		<value condition="System.Platform.Windows">$LOCALIZE[31566] $LOCALIZE[31568]</value>
		<value condition="System.Platform.ATV2">$LOCALIZE[31566] $LOCALIZE[31573]</value>
		<value condition="System.Platform.IOS">$LOCALIZE[31566] $LOCALIZE[31569]</value>
		<value condition="System.Platform.OSX">$LOCALIZE[31566] $LOCALIZE[31570]</value>
		<value condition="System.Platform.Android">$LOCALIZE[31566] $LOCALIZE[31572]</value>
		<value condition="System.Platform.Linux.RaspberryPi">$LOCALIZE[31566] $LOCALIZE[31571]</value>
		<value condition="System.Platform.Linux">$LOCALIZE[31566] $LOCALIZE[31567]</value>
		<value>$LOCALIZE[13205]</value>
		<!-- Unknown platform type -->
	</variable>
	<variable name="ShelfType">
		<value condition="[Control.HasFocus(9150) | Control.HasFocus(9160) | Control.HasFocus(9180) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31026])] + String.IsEqual(Skin.String(shelf-movieimages),$LOCALIZE[31954])">$LOCALIZE[31964]</value>
		<value condition="[Control.HasFocus(9150) | Control.HasFocus(9160) | Control.HasFocus(9180) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31026])] + String.IsEqual(Skin.String(shelf-movieimages),$LOCALIZE[31955])">$LOCALIZE[31960]</value>
		<value condition="[Control.HasFocus(9200) | Control.HasFocus(9210) | Control.HasFocus(9230) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[20343])] + String.IsEqual(Skin.String(shelf-tvshowimages),$LOCALIZE[31954])">$LOCALIZE[31965]</value>
		<value condition="[Control.HasFocus(9200) | Control.HasFocus(9210) | Control.HasFocus(9230) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[20343])] + String.IsEqual(Skin.String(shelf-tvshowimages),$LOCALIZE[31955])">$LOCALIZE[31962]</value>
		<value condition="[Control.HasFocus(9250) | Control.HasFocus(9260) | Control.HasFocus(9280) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[2])] + String.IsEqual(Skin.String(shelf-musicimages),$LOCALIZE[31954])">$LOCALIZE[31966]</value>
		<value condition="[Control.HasFocus(9250) | Control.HasFocus(9260) | Control.HasFocus(9280) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[2])] + String.IsEqual(Skin.String(shelf-musicimages),$LOCALIZE[31955])">$LOCALIZE[31963]</value>
		<value condition="[Control.HasFocus(9500) | Control.HasFocus(9510) | Control.HasFocus(9530) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31031])] + String.IsEqual(Skin.String(shelf-broadcastimages),$LOCALIZE[31956])">$LOCALIZE[31961]</value>
		<value condition="[Control.HasFocus(9500) | Control.HasFocus(9510) | Control.HasFocus(9530) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31031])] + String.IsEqual(Skin.String(shelf-broadcastimages),$LOCALIZE[31957])">$LOCALIZE[31967]</value>
		<value condition="[Control.HasFocus(9500) | Control.HasFocus(9510) | Control.HasFocus(9530) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[31031])] + String.IsEqual(Skin.String(shelf-broadcastimages),$LOCALIZE[31958])">$LOCALIZE[31968]</value>
		<value condition="[Control.HasFocus(9350) | Control.HasFocus(9360) | Control.HasFocus(9380) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-addonimages),$LOCALIZE[31652])">$LOCALIZE[31652]</value>
		<value condition="[Control.HasFocus(9350) | Control.HasFocus(9360) | Control.HasFocus(9380) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-addonimages),$LOCALIZE[31954])">$LOCALIZE[31969]</value>
		<value condition="[Control.HasFocus(9350) | Control.HasFocus(9360) | Control.HasFocus(9380) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-addonimages),$LOCALIZE[31959])">$LOCALIZE[31970]</value>
		<value condition="[Control.HasFocus(9550) | Control.HasFocus(9560) | Control.HasFocus(9580) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-customimages),$LOCALIZE[31652])">$LOCALIZE[31652]</value>
		<value condition="[Control.HasFocus(9550) | Control.HasFocus(9560) | Control.HasFocus(9580) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-customimages),$LOCALIZE[593]$LOCALIZE[1036])">$LOCALIZE[593] $LOCALIZE[1036]</value>
		<value condition="[Control.HasFocus(9550) | Control.HasFocus(9560) | Control.HasFocus(9580) | String.IsEqual(Container(9000).ListItem.Label2,$LOCALIZE[24001])] + String.IsEqual(Skin.String(shelf-customimages),$LOCALIZE[14211]$LOCALIZE[1036])">$LOCALIZE[14211] $LOCALIZE[1036]</value>
	</variable>
	<variable name="MenuType">
		<value condition="Skin.HasSetting(homemenu-vertical)">$LOCALIZE[31951]</value>
		<value condition="Skin.HasSetting(homemenu-horizontal)">$LOCALIZE[31952]</value>
		<value condition="Skin.HasSetting(homemenu-icon)">$LOCALIZE[31953]</value>
		<value>$LOCALIZE[31952]</value>
	</variable>
	<variable name="HomeItemType">
		<value condition="String.IsEqual(Window(settings).Property(CurrentType),$LOCALIZE[31660])">$LOCALIZE[31660]</value>
		<value condition="String.IsEqual(Window(settings).Property(CurrentType),$LOCALIZE[31661])">$LOCALIZE[31661]</value>
		<value condition="String.IsEqual(Window(settings).Property(CurrentType),$LOCALIZE[31653])">$LOCALIZE[31653]</value>
		<value>$LOCALIZE[31652]</value>
		<!-- Default to Favourite -->
	</variable>
	<variable name="BackgroundVisibilty">
		<value condition="!Skin.HasSetting(background-visibiltymed) + !Skin.HasSetting(background-visibiltyhigh)">$LOCALIZE[391]</value>
		<value condition="Skin.HasSetting(background-visibiltymed)">$LOCALIZE[392]</value>
		<value condition="Skin.HasSetting(background-visibiltyhigh)">$LOCALIZE[393]</value>
	</variable>
	<variable name="WeatherSunrise">
		<value condition="!String.IsEmpty(Window(weather).Property(Today.Sunrise))">$INFO[Window(weather).Property(Today.Sunrise)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Current.Sunrise))">$INFO[Window(weather).Property(Current.Sunrise)]</value>
	</variable>
	<variable name="WeatherSunset">
		<value condition="!String.IsEmpty(Window(weather).Property(Today.Sunset))">$INFO[Window(weather).Property(Today.Sunset)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Current.Sunset))">$INFO[Window(weather).Property(Current.Sunset)]</value>
	</variable>
	<variable name="WeatherIconCurrent">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day0.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day0.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day0.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay1">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day1.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day1.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day1.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay2">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day2.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day2.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day2.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay3">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day3.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day3.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day3.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay4">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day4.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day4.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day4.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay5">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day5.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day5.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day5.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconDay6">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day6.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Day6.FanartCode),,.png]</value>
		<value>$INFO[Window(weather).Property(Day6.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconWeekend1">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Weekend.1.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Weekend.1.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Weekend.1.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconWeekend2">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Weekend.2.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Weekend.2.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Weekend.2.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIcon36Hour1">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.1.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.1.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(36Hour.1.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIcon36Hour2">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.2.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.2.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(36Hour.2.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIcon36Hour3">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.3.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(36Hour.3.OutlookIcon)]</value>
		<value>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(36Hour.3.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly1">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.1.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.1.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.1.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly2">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.2.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.2.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.2.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly3">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.3.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.3.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.3.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly4">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.4.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.4.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.4.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly5">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.5.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.5.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.5.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly6">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.6.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.6.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.6.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly7">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(Weather).Property(Hourly.7.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(Weather).Property(Hourly.7.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.7.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly8">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.8.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.8.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.8.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly9">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.9.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.9.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.9.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly10">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.10.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.10.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.10.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly11">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.11.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.11.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.11.OutlookIcon)]</value>
	</variable>
	<variable name="WeatherIconHourly12">
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.12.FanartCode)]</value>
		<value condition="!String.IsEmpty(Skin.String(custom-weathericons.path)) + !Skin.HasSetting(custom-weathericons.multi)">$INFO[Skin.String(custom-weathericons.path)]$INFO[Window(weather).Property(Hourly.12.OutlookIcon)]</value>
		<value>$INFO[Window(weather).Property(Hourly.12.OutlookIcon)]</value>
	</variable>
	<variable name="HomeVideoIcon">
		<value condition="!String.IsEmpty(Skin.String(home-video-icon))">$INFO[Skin.String(home-video-icon)]</value>
		<value>special://skin/extras/homeicons/video.png</value>
	</variable>
	<variable name="HomeMovieIcon">
		<value condition="!String.IsEmpty(Skin.String(home-movie-icon))">$INFO[Skin.String(home-movie-icon)]</value>
		<value>special://skin/extras/homeicons/movie.png</value>
	</variable>
	<variable name="HomeTVShowsIcon">
		<value condition="!String.IsEmpty(Skin.String(home-tvshows-icon))">$INFO[Skin.String(home-tvshows-icon)]</value>
		<value>special://skin/extras/homeicons/tv.png</value>
	</variable>
	<variable name="HomeMusicIcon">
		<value condition="!String.IsEmpty(Skin.String(home-music-icon))">$INFO[Skin.String(home-music-icon)]</value>
		<value>special://skin/extras/homeicons/music.png</value>
	</variable>
	<variable name="HomeWeatherIcon">
		<value condition="String.IsEmpty(Skin.String(home-weather-icon))">special://skin/extras/homeicons/weather.png</value>
		<value condition="!String.IsEmpty(Skin.String(home-weather-icon))">$INFO[Skin.String(home-weather-icon)]</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Today.Sunrise)) + System.Time(Window(weather).Property(Today.Sunrise),Window(weather).Property(Today.Sunset))">special://skin/extras/homeicons/dayweather.png</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Today.Sunrise)) + !System.Time(Window(weather).Property(Today.Sunrise),Window(weather).Property(Today.Sunset))">special://skin/extras/homeicons/nightweather.png</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Current.Sunrise)) + System.Time(Window(weather).Property(Current.Sunrise),Window(weather).Property(Current.Sunset))">special://skin/extras/homeicons/dayweather.png</value>
		<value condition="!String.IsEmpty(Window(weather).Property(Current.Sunrise)) + !System.Time(Window(weather).Property(Current.Sunrise),Window(weather).Property(Current.Sunset))">special://skin/extras/homeicons/nightweather.png</value>
		<value condition="System.Time(06:00,18:00)">special://skin/extras/homeicons/dayweather.png</value>
		<value condition="!System.Time(06:00,18:00)">special://skin/extras/homeicons/nightweather.png</value>
	</variable>
	<variable name="HomeMusicVideoIcon">
		<value condition="!String.IsEmpty(Skin.String(home-musicvideo-icon))">$INFO[Skin.String(home-musicvideo-icon)]</value>
		<value>special://skin/extras/homeicons/musicvideo.png</value>
	</variable>
	<variable name="HomeTVIcon">
		<value condition="!String.IsEmpty(Skin.String(home-tv-icon))">$INFO[Skin.String(home-tv-icon)]</value>
		<value>special://skin/extras/homeicons/livetv.png</value>
	</variable>
	<variable name="HomeRadioIcon">
		<value condition="!String.IsEmpty(Skin.String(home-radio-icon))">$INFO[Skin.String(home-radio-icon)]</value>
		<value>special://skin/extras/homeicons/radio.png</value>
	</variable>
	<variable name="HomeProgramsIcon">
		<value condition="!String.IsEmpty(Skin.String(home-programs-icon))">$INFO[Skin.String(home-programs-icon)]</value>
		<value>special://skin/extras/homeicons/addons.png</value>
	</variable>
	<variable name="HomePhotosIcon">
		<value condition="!String.IsEmpty(Skin.String(home-photos-icon))">$INFO[Skin.String(home-photos-icon)]</value>
		<value>special://skin/extras/homeicons/pics.png</value>
	</variable>
	<variable name="HomeFavoritesIcon">
		<value condition="!String.IsEmpty(Skin.String(home-favorites-icon))">$INFO[Skin.String(home-favorites-icon)]</value>
		<value>special://skin/extras/homeicons/favs.png</value>
	</variable>
	<variable name="HomeSearchIcon">
		<value condition="!String.IsEmpty(Skin.String(home-search-icon))">$INFO[Skin.String(home-search-icon)]</value>
		<value>special://skin/extras/homeicons/search.png</value>
	</variable>
	<variable name="HomeFileManagerIcon">
		<value condition="!String.IsEmpty(Skin.String(home-filemanager-icon))">$INFO[Skin.String(home-filemanager-icon)]</value>
		<value>special://skin/extras/homeicons/filemanager.png</value>
	</variable>
	<variable name="HomeProfileIcon">
		<value condition="!String.IsEmpty(Skin.String(home-profile-icon))">$INFO[Skin.String(home-profile-icon)]</value>
		<value>special://skin/extras/homeicons/users.png</value>
	</variable>
	<variable name="HomeShutdownIcon">
		<value condition="!String.IsEmpty(Skin.String(home-shutdown-icon))">$INFO[Skin.String(home-shutdown-icon)]</value>
		<value>special://skin/extras/homeicons/quit.png</value>
	</variable>
	<variable name="CustomDefaultIcon">
		<!-- Show custom icon for default menu items in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-video) + !String.IsEmpty(Skin.String(home-video-icon))">$INFO[Skin.String(home-video-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-video)">special://skin/extras/homeicons/video.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-movie) + !String.IsEmpty(Skin.String(home-movie-icon))">$INFO[Skin.String(home-movie-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-movie)">special://skin/extras/homeicons/movie.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-tvshows) + !String.IsEmpty(Skin.String(home-tvshows-icon))">$INFO[Skin.String(home-tvshows-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-tvshows)">special://skin/extras/homeicons/tv.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-music) + !String.IsEmpty(Skin.String(home-music-icon))">$INFO[Skin.String(home-music-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-music)">special://skin/extras/homeicons/music.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-weather) + !String.IsEmpty(Skin.String(home-weather-icon))">$INFO[Skin.String(home-weather-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-weather)">special://skin/extras/homeicons/weather.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-musicvideo) + !String.IsEmpty(Skin.String(home-musicvideo-icon))">$INFO[Skin.String(home-musicvideo-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-musicvideo)">special://skin/extras/homeicons/musicvideo.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-tv) + !String.IsEmpty(Skin.String(home-tv-icon))">$INFO[Skin.String(home-tv-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-tv)">special://skin/extras/homeicons/livetv.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-radio) + !String.IsEmpty(Skin.String(home-radio-icon))">$INFO[Skin.String(home-radio-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-radio)">special://skin/extras/homeicons/radio.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-programs) + !String.IsEmpty(Skin.String(home-programs-icon))">$INFO[Skin.String(home-programs-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-programs)">special://skin/extras/homeicons/addons.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-photos) + !String.IsEmpty(Skin.String(home-photos-icon))">$INFO[Skin.String(home-photos-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-photos)">special://skin/extras/homeicons/pics.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-favorites) + !String.IsEmpty(Skin.String(home-favorites-icon))">$INFO[Skin.String(home-favorites-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-favorites)">special://skin/extras/homeicons/favs.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-search) + !String.IsEmpty(Skin.String(home-search-icon))">$INFO[Skin.String(home-search-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-search)">special://skin/extras/homeicons/search.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-filemanager) + !String.IsEmpty(Skin.String(home-filemanager-icon))">$INFO[Skin.String(home-filemanager-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-filemanager)">special://skin/extras/homeicons/filemanager.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-profile) + !String.IsEmpty(Skin.String(home-profile-icon))">$INFO[Skin.String(home-profile-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-profile)">special://skin/extras/homeicons/users.png</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-shutdown) + !String.IsEmpty(Skin.String(home-shutdown-icon))">$INFO[Skin.String(home-shutdown-icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListToggle),home-shutdown)">special://skin/extras/homeicons/quit.png</value>
	</variable>
	<variable name="CustomSkinAction">
		<!-- Show custom skin item action in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.Path)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.Path)]</value>
	</variable>
	<variable name="CustomPlaylistAction">
		<!-- Show custom skin playlist action in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1) + !Skin.HasSetting(CustomMovies.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2) + !Skin.HasSetting(CustomMovies.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3) + !Skin.HasSetting(CustomMovies.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4) + !Skin.HasSetting(CustomMovies.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5) + !Skin.HasSetting(CustomMovies.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1) + !Skin.HasSetting(CustomTVShow.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2) + !Skin.HasSetting(CustomTVShow.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3) + !Skin.HasSetting(CustomTVShow.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4) + !Skin.HasSetting(CustomTVShow.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5) + !Skin.HasSetting(CustomTVShow.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1) + !Skin.HasSetting(CustomTV.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2) + !Skin.HasSetting(CustomTV.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3) + !Skin.HasSetting(CustomTV.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4) + !Skin.HasSetting(CustomTV.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5) + !Skin.HasSetting(CustomTV.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1) + !Skin.HasSetting(CustomRadio.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2) + !Skin.HasSetting(CustomRadio.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3) + !Skin.HasSetting(CustomRadio.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4) + !Skin.HasSetting(CustomRadio.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5) + !Skin.HasSetting(CustomRadio.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1) + !Skin.HasSetting(CustomFav.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2) + !Skin.HasSetting(CustomFav.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3) + !Skin.HasSetting(CustomFav.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4) + !Skin.HasSetting(CustomFav.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5) + !Skin.HasSetting(CustomFav.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1) + !Skin.HasSetting(CustomMusic.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2) + !Skin.HasSetting(CustomMusic.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3) + !Skin.HasSetting(CustomMusic.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4) + !Skin.HasSetting(CustomMusic.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5) + !Skin.HasSetting(CustomMusic.5.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1) + !Skin.HasSetting(CustomAddon.1.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2) + !Skin.HasSetting(CustomAddon.2.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3) + !Skin.HasSetting(CustomAddon.3.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4) + !Skin.HasSetting(CustomAddon.4.Show)">$LOCALIZE[14098]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5) + !Skin.HasSetting(CustomAddon.5.Show)">$LOCALIZE[14098]</value>
		<value>$LOCALIZE[31941]</value>
	</variable>
	<variable name="CustomSkinPlaylist">
		<!-- Show custom skin item playlist in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.List)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.List)]</value>
	</variable>
	<variable name="CustomPlaylistMusic">
		<!-- Custom skin item playlist action (List Music) in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">ActivateWindow(music,$INFO[Skin.String(CustomMovies.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">ActivateWindow(music,$INFO[Skin.String(CustomTVShow.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">ActivateWindow(music,$INFO[Skin.String(CustomTV.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">ActivateWindow(music,$INFO[Skin.String(CustomTV.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">ActivateWindow(music,$INFO[Skin.String(CustomTV.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">ActivateWindow(music,$INFO[Skin.String(CustomTV.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">ActivateWindow(music,$INFO[Skin.String(CustomTV.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">ActivateWindow(music,$INFO[Skin.String(CustomRadio.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">ActivateWindow(music,$INFO[Skin.String(CustomFav.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">ActivateWindow(music,$INFO[Skin.String(CustomFav.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">ActivateWindow(music,$INFO[Skin.String(CustomFav.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">ActivateWindow(music,$INFO[Skin.String(CustomFav.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">ActivateWindow(music,$INFO[Skin.String(CustomFav.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">ActivateWindow(music,$INFO[Skin.String(CustomMusic.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">ActivateWindow(music,$INFO[Skin.String(CustomAddon.5.List)],return)</value>
	</variable>
	<variable name="CustomPlaylistVideo">
		<!-- Custom skin item playlist action (List Video) in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">ActivateWindow(videos,$INFO[Skin.String(CustomMovies.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">ActivateWindow(videos,$INFO[Skin.String(CustomTVShow.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">ActivateWindow(videos,$INFO[Skin.String(CustomTV.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">ActivateWindow(videos,$INFO[Skin.String(CustomRadio.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">ActivateWindow(videos,$INFO[Skin.String(CustomFav.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">ActivateWindow(videos,$INFO[Skin.String(CustomMusic.5.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.1.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.2.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.3.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.4.List)],return)</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">ActivateWindow(videos,$INFO[Skin.String(CustomAddon.5.List)],return)</value>
	</variable>
	<variable name="CustomPlaylistPlay">
		<!-- Custom skin item playlist action (Play playlist) in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.List),PlayMedia(",")]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.List),PlayMedia(",")]</value>
	</variable>
	<variable name="CustomSkinIcon">
		<!-- Show custom skin item icon in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.Icon)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.Icon)]</value>
	</variable>
	<variable name="CustomSkinLabel">
		<!-- Show custom skin item label in customisation dialog -->
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.1)">$INFO[Skin.String(CustomMovies.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.2)">$INFO[Skin.String(CustomMovies.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.3)">$INFO[Skin.String(CustomMovies.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.4)">$INFO[Skin.String(CustomMovies.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMovies.5)">$INFO[Skin.String(CustomMovies.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.1)">$INFO[Skin.String(CustomTVShow.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.2)">$INFO[Skin.String(CustomTVShow.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.3)">$INFO[Skin.String(CustomTVShow.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.4)">$INFO[Skin.String(CustomTVShow.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTVShow.5)">$INFO[Skin.String(CustomTVShow.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.1)">$INFO[Skin.String(CustomTV.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.2)">$INFO[Skin.String(CustomTV.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.3)">$INFO[Skin.String(CustomTV.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.4)">$INFO[Skin.String(CustomTV.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomTV.5)">$INFO[Skin.String(CustomTV.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.1)">$INFO[Skin.String(CustomRadio.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.2)">$INFO[Skin.String(CustomRadio.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.3)">$INFO[Skin.String(CustomRadio.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.4)">$INFO[Skin.String(CustomRadio.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomRadio.5)">$INFO[Skin.String(CustomRadio.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.1)">$INFO[Skin.String(CustomFav.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.2)">$INFO[Skin.String(CustomFav.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.3)">$INFO[Skin.String(CustomFav.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.4)">$INFO[Skin.String(CustomFav.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomFav.5)">$INFO[Skin.String(CustomFav.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.1)">$INFO[Skin.String(CustomMusic.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.2)">$INFO[Skin.String(CustomMusic.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.3)">$INFO[Skin.String(CustomMusic.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.4)">$INFO[Skin.String(CustomMusic.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomMusic.5)">$INFO[Skin.String(CustomMusic.5.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.1)">$INFO[Skin.String(CustomAddon.1.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.2)">$INFO[Skin.String(CustomAddon.2.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.3)">$INFO[Skin.String(CustomAddon.3.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.4)">$INFO[Skin.String(CustomAddon.4.Label)]</value>
		<value condition="String.Contains(Window(settings).Property(ListCustomBase),CustomAddon.5)">$INFO[Skin.String(CustomAddon.5.Label)]</value>
	</variable>
	<variable name="SkinSettingHelp">
		<!-- Help strings for skin settings -->
		<value condition="Control.HasFocus(102)">$LOCALIZE[31300]</value>
		<value condition="Control.HasFocus(105)">$LOCALIZE[31301]</value>
		<value condition="Control.HasFocus(106)">$LOCALIZE[31302]</value>
		<value condition="Control.HasFocus(107)">$LOCALIZE[31303]</value>
		<value condition="Control.HasFocus(201)">$LOCALIZE[31304]</value>
		<value condition="Control.HasFocus(202)">$LOCALIZE[31309]</value>
		<value condition="Control.HasFocus(203)">$LOCALIZE[31305]</value>
		<value condition="Control.HasFocus(205)">$LOCALIZE[31306]</value>
		<value condition="Control.HasFocus(206)">$LOCALIZE[31307]</value>
		<value condition="Control.HasFocus(209)">$LOCALIZE[31310]</value>
		<value condition="Control.HasFocus(212)">$LOCALIZE[31311]</value>
		<value condition="Control.HasFocus(302)">$LOCALIZE[31312]</value>
		<value condition="Control.HasFocus(303)">$LOCALIZE[31313]</value>
		<value condition="Control.HasFocus(304) | Control.HasFocus(305)">$LOCALIZE[31314]</value>
		<value condition="Control.HasFocus(307)">$LOCALIZE[31315]</value>
		<value condition="Control.HasFocus(308)">$LOCALIZE[31316]</value>
		<value condition="ControlGroup(309).HasFocus()">$LOCALIZE[31317]</value>
		<value condition="Control.HasFocus(312)">$LOCALIZE[31318]</value>
		<value condition="Control.HasFocus(313)">$LOCALIZE[31320]</value>
		<value condition="Control.HasFocus(314)">$LOCALIZE[31319]</value>
		<value condition="Control.HasFocus(315)">$LOCALIZE[31322]</value>
		<value condition="Control.HasFocus(402)">$LOCALIZE[31321]</value>
		<value condition="Control.HasFocus(502) | Control.HasFocus(503)">$LOCALIZE[31340]</value>
		<value condition="Control.HasFocus(504)">$LOCALIZE[31341]</value>
		<value condition="Control.HasFocus(505)">$LOCALIZE[31342]</value>
		<value condition="Control.HasFocus(506)">$LOCALIZE[31343]</value>
		<value condition="Control.HasFocus(507)">$LOCALIZE[31344]</value>
		<value condition="Control.HasFocus(510)">$LOCALIZE[31346]</value>
		<value condition="Control.HasFocus(602)">$LOCALIZE[31350]</value>
		<value condition="Control.HasFocus(603)">$LOCALIZE[31351]</value>
		<value condition="Control.HasFocus(604)">$LOCALIZE[31352]</value>
		<value condition="Control.HasFocus(605)">$LOCALIZE[31353]</value>
		<value condition="Control.HasFocus(606)">$LOCALIZE[31354]</value>
		<value condition="Control.HasFocus(607)">$LOCALIZE[31355]</value>
		<value condition="Control.HasFocus(703)">$LOCALIZE[31361]</value>
		<value condition="Control.HasFocus(705)">$LOCALIZE[31362]</value>
		<value condition="Control.HasFocus(707)">$LOCALIZE[31363]</value>
		<value condition="Control.HasFocus(709)">$LOCALIZE[31364]</value>
		<value condition="Control.HasFocus(711)">$LOCALIZE[31365]</value>
		<value condition="Control.HasFocus(713)">$LOCALIZE[31366]</value>
		<value condition="Control.HasFocus(715)">$LOCALIZE[31367]</value>
		<value condition="Control.HasFocus(717)">$LOCALIZE[31368]</value>
		<value condition="Control.HasFocus(802)">$LOCALIZE[31371]</value>
		<value condition="Control.HasFocus(803)">$LOCALIZE[31370]</value>
		<value condition="Control.HasFocus(805)">$LOCALIZE[31372]</value>
		<value condition="Control.HasFocus(806)">$LOCALIZE[31373]</value>
		<value condition="Control.HasFocus(808)">$LOCALIZE[31375]</value>
		<value condition="Control.HasFocus(809)">$LOCALIZE[31376]</value>
		<value condition="Control.HasFocus(984)">$LOCALIZE[31360]</value>
		<value condition="Control.HasFocus(987)">$LOCALIZE[31359]</value>
		<value condition="Window.IsVisible(Custom_HomeCustomise.xml) + !Control.HasFocus(402)">$LOCALIZE[31374]</value>
	</variable>
	<include file="Defaults.xml"/>

	<!-- Video Lyrics includes, "borrowed" from skin.aeon.nox.5 -->
	<!-- Thanks to BigNoid -->
	<include name="Lyrics1">
		<param name="col11" default="black"/>
		<param name="col12" default="black"/>
		<param name="col13" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="300"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="500"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col11]</textcolor>
			</control>
			<control type="label">
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="600"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="800"/>
				</animation>
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col12]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="900"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="1100"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col13]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics1b">
		<param name="col14" default="black"/>
		<param name="1b_left" default="510"/>
		<param name="1b_top" default="224"/>
		<definition>
			<control type="group">
				<left>$PARAM[1b_left]</left>
				<top>$PARAM[1b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="300" start="-200,0" end="0,0" tween="back" easing="out" time="900"/>
					<effect type="zoom" center="450,370" delay="300" start="25" end="100" tween="sine" easing="out" time="900"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>80</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr1b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col14]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics2">
		<param name="col21" default="black"/>
		<param name="col22" default="black"/>
		<param name="col23" default="black"/>
		<param name="col24" default="black"/>
		<param name="2_left" default="0"/>
		<param name="2_top" default="250"/>
		<definition>
			<control type="group">
				<top>$PARAM[2_top]</top>
				<left>$PARAM[2_left]</left>
				<control type="grouplist">
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="0" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr2</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col21]</textcolor>
					</control>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr2</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col22]</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<left>0</left>
					<top>20</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>30</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr2</font>
						<shadowcolor>black</shadowcolor>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>$PARAM[col23]</textcolor>
					</control>
					<control type="label">
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="480,200" start="0" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr2b</font>
						<shadowcolor>black</shadowcolor>
						<align>left</align>
						<aligny>top</aligny>
						<textcolor>$PARAM[col24]</textcolor>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics3">
		<param name="col31" default="black"/>
		<param name="col32" default="black"/>
		<param name="col33" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="100,-300" end="50,0" time="250" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="15" end="-10" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="10" time="200" tween="back" easing="out"/>
					<effect type="slide" delay="900" end="-50,0" time="300" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col31]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="0,-300" end="0,0" time="500" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="-8" end="11" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="-11" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col32]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-100,-300" end="-50,0" time="650" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="22" end="-12" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="12" time="300" tween="back" easing="out"/>
					<effect type="slide" delay="900" end="50,0" time="350" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col33]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics3b">
		<param name="col34" default="black"/>
		<param name="3b_left" default="510"/>
		<param name="3b_top" default="230"/>
		<definition>
			<control type="group">
				<left>$PARAM[3b_left]</left>
				<top>$PARAM[3b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="700" start="0,250" end="0,0" time="350" tween="back"/>
					<effect type="rotate" delay="700" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>74</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr3b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col34]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics4">
		<param name="col41" default="black"/>
		<param name="col42" default="black"/>
		<param name="col43" default="black"/>
		<param name="col44" default="black"/>
		<param name="4_left" default="110"/>
		<param name="4_top" default="30"/>
		<definition>
			<control type="group">
				<top>$PARAM[4_top]</top>
				<left>$PARAM[4_left]</left>
				<animation effect="rotate" center="auto" start="5" end="5" condition="true">Conditional</animation>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" end="0,-115" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="-280,0" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="250" tween="back" easing="out"/>
					</animation>
					<left>-30</left>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col41]</textcolor>
				</control>
				<control type="label">
					<left>-30</left>
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="-280,0" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="300" tween="back" easing="out"/>
					</animation>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col42]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="350" tween="back" easing="out"/>
					</animation>
					<left>795</left>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col43]</textcolor>
				</control>
				<control type="textbox">
					<left>860</left>
					<top>478</top>
					<width>700</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="1100" end="0,-160" time="350" tween="back" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr4b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col44]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics5">
		<param name="col51" default="black"/>
		<param name="col52" default="black"/>
		<param name="col53" default="black"/>
		<param name="col54" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-1950,0" time="500" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col51]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-150,70"/>
					<effect type="slide" delay="100" end="-2000,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="650" end="200,0" time="200" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col52]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-200,140"/>
					<effect type="slide" delay="150" end="-1950,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="700" end="200,0" time="250" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col53]</textcolor>
			</control>
			<control type="label">
				<wrapmultiline>true</wrapmultiline>
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-250,196"/>
					<effect type="slide" delay="250" end="-2100,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="700" end="400,0" time="300" tween="sine" easing="out"/>
				</animation>
				<width min="100" max="700">auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part4)]</label>
				<font>lyr5b</font>
				<shadowcolor>black</shadowcolor>
				<align>left</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col54]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics6">
		<param name="col61" default="black"/>
		<param name="col62" default="black"/>
		<param name="col63" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col61]</textcolor>
			</control>
			<control type="label">
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="150" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" delay="150" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col62]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="300" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" delay="300" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col63]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics6b">
		<param name="col64" default="black"/>
		<param name="6b_left" default="510"/>
		<param name="6b_top" default="224"/>
		<definition>
			<control type="group">
				<left>$PARAM[6b_left]</left>
				<top>$PARAM[6b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="225" start="0,200" end="0,0" time="350" tween="back"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>80</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr6b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col64]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics7">
		<param name="col71" default="black"/>
		<param name="col72" default="black"/>
		<param name="col73" default="black"/>
		<param name="col74" default="black"/>
		<param name="7_left" default="10"/>
		<param name="7_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[7_top]</top>
				<left>$PARAM[7_left]</left>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" end="0,-115" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="250" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>520</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr7</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col71]</textcolor>
				</control>
				<control type="label">
					<left>50</left>
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="300" tween="back" easing="out"/>
					</animation>
					<top>520</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr7a</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col72]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="600" center="960,540" start="0" end="100" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>350</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr7b</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col73]</textcolor>
				</control>
				<control type="textbox">
					<left>1080</left>
					<top>-15</top>
					<width>525</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="1100" center="auto" start="0" end="100" time="350" tween="back" easing="out"/>
						<effect type="rotate" delay="1100" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr7c</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col74]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics8">
		<param name="col81" default="black"/>
		<param name="col82" default="black"/>
		<param name="col83" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotatey" center="0,0" start="90" end="0" time="450" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col81]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotatex" center="0,0" start="90" end="0" time="600" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col82]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotate" center="0,0" start="170" end="0" time="750" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col83]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics8b">
		<param name="col84" default="black"/>
		<param name="8b_left" default="510"/>
		<param name="8b_top" default="270"/>
		<definition>
			<control type="group">
				<left>$PARAM[8b_left]</left>
				<top>$PARAM[8b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="750" start="-800,0" end="0,0" time="400" tween="back" easing="out"/>
					<effect type="rotate" delay="750" center="auto" start="3" end="0" time="575" tween="bounce" easing="out"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>24</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr8b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col84]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics9">
		<param name="col91" default="black"/>
		<param name="col92" default="black"/>
		<param name="col93" default="black"/>
		<param name="col94" default="black"/>
		<param name="9_left" default="20"/>
		<param name="9_top" default="-20"/>
		<definition>
			<control type="group">
				<top>$PARAM[9_top]</top>
				<left>$PARAM[9_left]</left>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="400" start="0,-400" end="0,0" time="250" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="250" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>395</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col93]</textcolor>
				</control>
				<control type="label">
					<left>0</left>
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="150" start="0,-400" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="300" tween="back" easing="out"/>
					</animation>
					<top>270</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col92]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="0,-400" end="0,0" time="250" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="350" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>145</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col91]</textcolor>
				</control>
				<control type="textbox">
					<left>960</left>
					<top>30</top>
					<width>600</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="700" start="600,0" end="0,0" time="350" tween="back"/>
						<effect type="rotate" delay="700" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr9b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col94]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics10">
		<param name="col101" default="black"/>
		<param name="col102" default="black"/>
		<param name="col103" default="black"/>
		<param name="col104" default="black"/>
		<param name="10_left" default="0"/>
		<param name="10_top" default="150"/>
		<definition>
			<control type="group">
				<top>$PARAM[10_top]</top>
				<left>$PARAM[10_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="350"/>
						<effect type="slide" delay="800" start="0,0" end="0,-200" time="350" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>154</top>
					<width>1920</width>
					<height>115</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr10</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col101]</textcolor>
				</control>
				<control type="grouplist">
					<left>0</left>
					<top>260</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>35</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="550"/>
							<effect type="slide" delay="800" start="0,0" end="0,-200" time="400" tween="back" easing="out"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr10</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col102]</textcolor>
					</control>
					<control type="label">
						<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="750"/>
							<effect type="slide" delay="800" start="0,0" end="0,-200" time="450" tween="back" easing="out"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr10</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col103]</textcolor>
					</control>
				</control>
				<control type="textbox">
					<left>610</left>
					<top>178</top>
					<width>700</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="1150" start="400,0" end="0,0" time="200" tween="sine" easing="out"/>
						<effect type="rotate" delay="1150" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr10b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col104]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics11">
		<param name="col111" default="black"/>
		<param name="col112" default="black"/>
		<param name="col113" default="black"/>
		<param name="col114" default="black"/>
		<param name="11_left" default="0"/>
		<param name="11_top" default="250"/>
		<definition>
			<control type="group">
				<top>$PARAM[11_top]</top>
				<left>$PARAM[11_left]</left>
				<control type="grouplist">
					<animation type="Visible" reversible="false">
						<effect type="slide" start="0,-200" end="0,0" time="200"/>
					</animation>
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr11b</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col112]</textcolor>
					</control>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr11</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>00fFFFFF</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="250" start="400,0" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr11b</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>00fFFFFF</textcolor>
					</control>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr11</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col113]</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="500" start="-400,0" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>15</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>40</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr11</font>
						<shadowcolor>black</shadowcolor>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>$PARAM[col111]</textcolor>
					</control>
					<control type="label">
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr11b</font>
						<align>left</align>
						<aligny>top</aligny>
						<textcolor>00ffffff</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="750" start="0,200" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>30</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>40</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr11</font>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>00ffffff</textcolor>
					</control>
					<control type="label">
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr11b</font>
						<shadowcolor>black</shadowcolor>
						<align>left</align>
						<aligny>top</aligny>
						<textcolor>$PARAM[col114]</textcolor>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12">
		<param name="col121" default="black"/>
		<param name="12_left" default="10"/>
		<param name="12_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[12_top]</top>
				<left>$PARAM[12_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" center="auto" start="0" end="100" time="200"/>
					</animation>
					<left>40</left>
					<top>5</top>
					<width>1820</width>
					<height>400</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr12</font>
					<shadowcolor>black</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<scrollsuffix/>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col121]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12b">
		<param name="col122" default="black"/>
		<param name="col123" default="black"/>
		<param name="12b_left" default="10"/>
		<param name="12b_top" default="180"/>
		<definition>
			<control type="grouplist">
				<top>$PARAM[12b_top]</top>
				<left>$PARAM[12b_left]</left>
				<width>1900</width>
				<height>350</height>
				<itemgap>45</itemgap>
				<scrolltime>0</scrolltime>
				<orientation>horizontal</orientation>
				<visible>true</visible>
				<align>center</align>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr12b</font>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>00fFFFFF</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="500" center="auto" start="0" end="100" time="200"/>
					</animation>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr12c</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col123]</textcolor>
				</control>
			</control>
			<control type="grouplist">
				<top>$PARAM[12b_top]</top>
				<left>$PARAM[12b_left]</left>
				<width>1900</width>
				<height>350</height>
				<itemgap>45</itemgap>
				<scrolltime>0</scrolltime>
				<orientation>horizontal</orientation>
				<visible>true</visible>
				<align>center</align>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="250" center="auto" start="0" end="100" time="200"/>
					</animation>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr12b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col122]</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr12c</font>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>00fFFFFF</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12c">
		<param name="col124" default="black"/>
		<param name="12c_left" default="10"/>
		<param name="12c_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[12c_top]</top>
				<left>$PARAM[12c_left]</left>
				<control type="textbox">
					<left>600</left>
					<top>390</top>
					<width>700</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="800" center="960,400" start="0" end="100" time="200"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr12d</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col124]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics13">
		<param name="col131" default="black"/>
		<param name="col132" default="black"/>
		<param name="col133" default="black"/>
		<definition>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="300"/>
					<effect type="rotate" center="auto" start="360" end="0" time="300" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col131]</textcolor>
			</control>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="500"/>
					<effect type="rotate" center="auto" start="450" end="0" time="500" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col132]</textcolor>
			</control>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="600"/>
					<effect type="rotate" center="auto" start="540" end="0" time="700" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col133]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics13b">
		<param name="col134" default="black"/>
		<param name="13b_left" default="510"/>
		<param name="13b_top" default="220"/>
		<definition>
			<control type="group">
				<left>$PARAM[13b_left]</left>
				<top>$PARAM[13b_top]</top>
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="450,370" delay="700" start="25" end="100" tween="sine" easing="out" time="300"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>82</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr13b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col134]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics14">
		<param name="col141" default="00ffffff"/>
		<param name="col142" default="00ffffff"/>
		<param name="col143" default="00ffffff"/>
		<definition>
			<control type="label">
				<animation effect="rotate" center="auto" start="4" end="4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,-400"/>
					<effect type="slide" delay="100" end="0,400" time="10"/>
					<effect type="fade" delay="100" start="0" end="100" time="250"/>
					<effect type="zoom" delay="100" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col141]</textcolor>
			</control>
			<control type="label">
				<animation effect="rotate" center="auto" start="-4" end="-4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-10,-400"/>
					<effect type="slide" delay="450" end="0,390" time="10"/>
					<effect type="fade" delay="450" start="0" end="100" time="250"/>
					<effect type="zoom" delay="450" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col142]</textcolor>
			</control>
			<control type="label">
				<animation effect="rotate" center="auto" start="4" end="4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,-400"/>
					<effect type="slide" delay="800" end="0,410" time="10"/>
					<effect type="fade" delay="800" start="0" end="100" time="250"/>
					<effect type="zoom" delay="800" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col143]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics14b">
		<param name="col144" default="00ffffff"/>
		<param name="14b_left" default="610"/>
		<param name="14b_top" default="340"/>
		<definition>
			<control type="textbox">
				<left>$PARAM[14b_left]</left>
				<top>$PARAM[14b_top]</top>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="fade" delay="1200" start="0" end="100" time="250"/>
					<effect type="zoom" center="960,500" delay="1200" start="0" end="105" time="250" tween="back" easing="out"/>
				</animation>
				<width>700</width>
				<height>600</height>
				<label>$INFO[Container(110).ListItem.Property(part4)]</label>
				<font>lyr14b</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col144]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics15">
		<param name="col151" default="black"/>
		<param name="col152" default="black"/>
		<param name="col153" default="black"/>
		<param name="col154" default="black"/>
		<param name="15_left" default="170"/>
		<param name="15_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[15_top]</top>
				<left>$PARAM[15_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>125</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col151]</textcolor>
				</control>
				<control type="label">
					<left>50</left>
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="150" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<top>250</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col152]</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>375</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col153]</textcolor>
				</control>
				<control type="textbox">
					<left>800</left>
					<top>10</top>
					<width>600</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="650" start="0,-400" end="0,0" time="1200" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr15b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col154]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="line1">
		<width>900</width>
		<height>600</height>
		<font>lyrsh16</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line3">
		<width>900</width>
		<height>600</height>
		<font>lyrsh38</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line7">
		<width>900</width>
		<height>600</height>
		<font>lyrsh72</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line9">
		<width>900</width>
		<height>600</height>
		<font>lyrsh94</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<!-- End of Video Lyrics includes -->

	<include name="defaultskinsettings">
		<!-- various default settings  -->
		<onload>Skin.SetBool(SkinHelper.EnablePVRThumbs)</onload>
		<onload>Skin.SetBool(SkinHelper.EnableMusicArt)</onload>
		<onload>Skin.SetBool(SkinHelper.EnableExtraFanart)</onload>
		<onload>Skin.SetString(SkinHelper.RandomFanartDelay,0)</onload>
	</include>
	<include name="fullscreenimage">
		<!-- Postion and size of fullscreen image -->
		<left>0</left>
		<top>0</top>
		<width>1920</width>
		<height>1080</height>
	</include>
	<include name="fadebackground">
		<!-- Background shadow -->
		<!-- Don't fade background if on Fullscreen video screen -->
		<control type="image">
			<include>fullscreenimage</include>
			<texture colordiffuse="mask-background">background-mask.png</texture>
			<aspectratio>scale</aspectratio>
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
		</control>
	</include>
	<include name="background">
		<control type="group">
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
			<!-- Don't try to show background if Video screen is showing -->
			<control type="image">
				<!-- Use skin default background as base layer for backdrops -->
				<include>fullscreenimage</include>
				<texture>background.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="multiimage">
				<include>fullscreenimage</include>
				<randomize>true</randomize>
				<timeperimage>6000</timeperimage>
				<fadetime>400</fadetime>
				<imagepath background="false">$VAR[BackgndImage]</imagepath>
				<aspectratio>stretch</aspectratio>
				<colordiffuse>$VAR[BackgndImageVisibity]</colordiffuse>
				<animation effect="fade" start="0" end="100" time="200" delay="1300">Visible</animation>
				<visible>!Container().Scrolling + !System.ScreenSaverActive + ![Skin.HasSetting(background-playingmedia) + Player.HasVideo]</visible>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(background-playingmedia) + [[Skin.HasSetting(homemenu-vertical) + Window.IsVisible(home)] | !Window.IsVisible(home)]</visible>
				<control type="videowindow">
					<include>fullscreenimage</include>
					<colordiffuse>$VAR[BackgndImageVisibity]</colordiffuse>
					<visible>Player.HasVideo</visible>
				</control>
				<control type="visualisation">
					<include>fullscreenimage</include>
					<colordiffuse>$VAR[BackgndImageVisibity]</colordiffuse>
					<animation effect="fade" time="200">VisibleChange</animation>
					<visible>Player.HasAudio + String.IsEmpty(Window(videos).Property(PlayingBackgroundMedia))</visible>
				</control>
			</control>
		</control>
	</include>
	<include name="player-mediaicon">
		<control type="group" id="1">
			<!-- Player Media Icon -->
			<visible>[$EXP[isFullscreenVideo]] + ![Window.IsActive(musicosd)]</visible>
			<animation effect="fade" time="200">VisibleChange</animation>
			<control type="image">
				<!-- Movies or Tv Episodes -->
				<left>12</left>
				<top>746</top>
				<width>320</width>
				<height>320</height>
				<texture>$VAR[PlayerVideoArt]</texture>
				<align>center</align>
				<aligny>bottom</aligny>
				<aspectratio>keep</aspectratio>
				<visible>[VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)] + ![String.Contains(Player.FolderPath,pvr://) | String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)]</visible>
			</control>
			<control type="image">
				<!-- LiveTV playing -->
				<left>12</left>
				<top>746</top>
				<width>320</width>
				<height>320</height>
				<align>center</align>
				<aligny>bottom</aligny>
				<texture fallback="icon-livetv.png">$VAR[PVRPgmIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.Contains(Player.FolderPath,pvr://) + ![String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)]</visible>
			</control>
			<control type="image">
				<!-- Any video other than Movies and TV Episodes and LiveTV -->
				<left>12</left>
				<top>746</top>
				<width>320</width>
				<height>320</height>
				<align>center</align>
				<aligny>bottom</aligny>
				<texture diffuse="mask-rect.png" fallback="DefaultVideo.png" >$INFO[Player.Art(thumb)]</texture>
				<aspectratio scalediffuse="false">keep</aspectratio>
				<visible>[!VideoPlayer.Content(movies) + !VideoPlayer.Content(episodes) + !String.Contains(Player.FolderPath,pvr://)] | [String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)] </visible>
			</control>
		</control>
	</include>
	<include name="page-info">
		<control type="group">
			<visible>!System.ScreenSaverActive</visible>
			<control type="image">
				<!-- RSS Logo -->
				<left>8</left>
				<top>1023</top>
				<width>48</width>
				<height>48</height>
				<aspectratio>keep</aspectratio>
				<texture>rss.png</texture>
			</control>
			<control type="rss">
				<left>60</left>
				<top>1026</top>
				<width>1860</width>
				<height>33</height>
				<font>apptv20</font>
				<urlset>1</urlset>
				<textcolor>info-text</textcolor>
				<titlecolor>rss-title-text</titlecolor>
				<headlinecolor>rss-headline-text</headlinecolor>
				<visible>String.IsEmpty(Skin.String(custom-watermark))</visible>
			</control>
			<control type="rss">
				<left>60</left>
				<top>1026</top>
				<width>1596</width>
				<height>33</height>
				<font>apptv20</font>
				<urlset>1</urlset>
				<textcolor>info-text</textcolor>
				<titlecolor>rss-title-text</titlecolor>
				<headlinecolor>rss-headline-text</headlinecolor>
				<visible>!String.IsEmpty(Skin.String(custom-watermark))</visible>
			</control>
		</control>
	</include>
	<include name="sortletternotification">
		<control type="group">
			<visible>Container.Scrolling + !Window.IsVisible(progressdialog) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(albums) | Container.Content(artists)]</visible>
			<animation effect="fade" time="200">Visible</animation>
			<animation effect="fade" time="200" delay="500">Hidden</animation>
			<animation condition="Skin.HasSetting(show-letterbar) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(albums) | Container.Content(artists)]" effect="fade" start="100" end="0" reversible="true">Conditional</animation>
			<left>897</left>
			<top>36</top>
			<width>123</width>
			<height>105</height>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>123</width>
				<height>105</height>
				<texture border="12">button-menu-background.png</texture>
				<visible>!String.IsEmpty(ListItem.SortLetter)</visible>
			</control>
			<control type="label">
				<left>0</left>
				<top>12</top>
				<width>123</width>
				<height>72</height>
				<align>center</align>
				<label>$INFO[ListItem.SortLetter]</label>
				<font>apptv48</font>
			</control>
		</control>
	</include>
	<include name="fake-overlay">
		<control type="group">
			<visible>Skin.HasSetting(media-overlay) + !Window.IsActive(playercontrols)</visible>
			<control type="group">
				<!-- Video Stuff -->
				<visible>Player.HasVideo + !Skin.HasSetting(background-playingmedia)</visible>
				<control type="videowindow">
					<left>52</left>
					<top>8</top>
					<width>250</width>
					<height>150</height>
				</control>
				<control type="label">
					<!-- Now playing -->
					<left>318</left>
					<top>21</top>
					<width>645</width>
					<height>38</height>
					<label>$LOCALIZE[31037]</label>
					<font>apptv23</font>
					<textcolor>listselected-text</textcolor>
				</control>
				<control type="label">
					<left>318</left>
					<top>58</top>
					<width>645</width>
					<height>38</height>
					<label>$INFO[VideoPlayer.Title]</label>
					<font>apptv23</font>
					<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					<visible>!Pvr.IsPlayingTv</visible>
				</control>
				<control type="label">
					<left>318</left>
					<top>58</top>
					<width>645</width>
					<height>38</height>
					<label>$INFO[VideoPlayer.ChannelNumberLabel] - $INFO[VideoPlayer.ChannelName]</label>
					<font>apptv23</font>
					<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					<visible>Pvr.IsPlayingTv</visible>
				</control>
				<control type="label">
					<!-- Time and duration -->
					<left>318</left>
					<top>96</top>
					<width>645</width>
					<height>38</height>
					<label>$INFO[Player.Time]$INFO[Player.Duration, / ]</label>
					<font>apptv23</font>
				</control>
			</control>
			<control type="group">
				<!-- Audio Stuff -->
				<visible>Player.HasAudio</visible>
				<control type="group">
					<!-- Local Audio -->
					<visible>!Pvr.IsPlayingRadio + !String.IsEmpty(MusicPlayer.TimeRemaining)</visible>
					<control type="image">
						<left>36</left>
						<top>3</top>
						<width>150</width>
						<height>150</height>
						<texture background="true" fallback="DefaultAudio.png">$VAR[PlayerMusicCover]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="label">
						<left>218</left>
						<top>3</top>
						<width>712</width>
						<height>38</height>
						<label>$INFO[MusicPlayer.Artist]</label>
						<font>apptv22</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
					<control type="label">
						<left>218</left>
						<top>40</top>
						<width>712</width>
						<height>38</height>
						<label>$INFO[MusicPlayer.Title]</label>
						<font>apptv22</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
					<control type="label">
						<left>218</left>
						<top>78</top>
						<width>712</width>
						<height>38</height>
						<label>$INFO[MusicPlayer.Album]</label>
						<font>apptv22</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
					<control type="label">
						<left>218</left>
						<top>116</top>
						<width>712</width>
						<height>38</height>
						<label>$INFO[MusicPlayer.Time]$INFO[MusicPlayer.Duration, / ]</label>
						<font>apptv23</font>
					</control>
				</control>
				<control type="group">
					<!-- Radio -->
					<visible>Pvr.IsPlayingRadio</visible>
					<control type="image">
						<left>36</left>
						<top>3</top>
						<width>150</width>
						<height>150</height>
						<texture background="true" fallback="icon-radio.png">$VAR[PVRIcon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="label">
						<!-- Radio channel name -->
						<left>218</left>
						<top>22</top>
						<width>712</width>
						<height>38</height>
						<label>$LOCALIZE[19021] - $INFO[MusicPlayer.ChannelName]</label>
						<font>apptv25</font>
					</control>
					<control type="label">
						<!-- Radio Program name -->
						<left>218</left>
						<top>63</top>
						<width>712</width>
						<height>38</height>
						<label>$INFO[MusicPlayer.Title]</label>
						<font>apptv22</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
				</control>
				<control type="group">
					<!-- Probably a stream -->
					<visible>!Pvr.IsPlayingRadio + String.IsEmpty(MusicPlayer.TimeRemaining)</visible>
					<control type="image">
						<left>36</left>
						<top>3</top>
						<width>150</width>
						<height>150</height>
						<texture background="true" fallback="icon-radio.png">$VAR[PlayerMusicCover]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="label">
						<left>218</left>
						<top>3</top>
						<width>712</width>
						<height>38</height>
						<label>$INFO[MusicPlayer.Title]</label>
						<font>apptv22</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
					<control type="label">
						<!-- Artist label -->
						<left>218</left>
						<top>40</top>
						<width>712</width>
						<height>33</height>
						<font>apptv22</font>
						<label>$INFO[Window(home).Property(plugin.audio.streaming-radio.Artist)]</label>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
						<visible>!String.IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Artist))</visible>
					</control>
					<control type="label">
						<!-- Track title -->
						<left>218</left>
						<top>78</top>
						<width>712</width>
						<height>33</height>
						<font>apptv22</font>
						<label>$INFO[Window(home).Property(plugin.audio.streaming-radio.Title)]</label>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
						<visible>!String.IsEmpty(Window(home).Property(plugin.audio.streaming-radio.Title))</visible>
					</control>
				</control>
			</control>
		</control>
	</include>
	<include name="horzhomelistitem">
		<control type="label">
			<left>12</left>
			<top>12</top>
			<width>291</width>
			<height>33</height>
			<font>apptv22</font>
			<align>center</align>
			<label fallback="20333">$INFO[ListItem.Label]</label>
			<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
			<animation effect="fade" start="100" end="35" condition="!ListItem.Property(isActive) | Control.HasFocus(402)">Conditional</animation>
		</control>
	</include>
	<include name="illegal-action">
		<param name="controlid"/>
		<param name="returnid"/>
		<definition>
			<control type="button" id="$PARAM[controlid]">
				<left>-10</left>
				<top>-10</top>
				<width>1</width>
				<height>1</height>
				<onfocus>SetFocus($PARAM[returnid])</onfocus>
				<onfocus>ActivateWindow(1157)</onfocus>
			</control>
		</definition>
	</include>
	<include name="use-alttexture">
		<param name="visiblecondition"/>
		<definition>
			<usealttexture>$PARAM[visiblecondition]</usealttexture>
		</definition>
	</include>
	<include name="listitem-count">
		<param name="left" default="0"/>
		<param name="top" default="0"/>
		<param name="count"/>
		<param name="size" default="100"/>
		<definition>
			<control type="group">
				<visible>Integer.IsGreater($PARAM[count],0)</visible>
				<animation condition="true" effect="zoom" start="100" end="$PARAM[size]" center="auto">Conditional</animation>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<control type="image">
					<description> Count (less than 10) </description>
					<left>22</left>
					<top>0</top>
					<width>40</width>
					<height>40</height>
					<texture>overlaynumberitems.png</texture>
					<visible>!Integer.IsGreater($PARAM[count],9)</visible>
				</control>
				<control type="image">
					<description> Count (10 - 99) </description>
					<left>10</left>
					<top>0</top>
					<width>64</width>
					<height>40</height>
					<texture border="16,0,16,0">overlaynumberitems.png</texture>
					<visible>Integer.IsGreater($PARAM[count],9) + !Integer.IsGreater($PARAM[count],99)</visible>
				</control>
				<control type="image">
					<description> Count (100 - 999) </description>
					<left>0</left>
					<top>0</top>
					<width>84</width>
					<height>40</height>
					<texture border="16,0,16,0">overlaynumberitems.png</texture>
					<visible>Integer.IsGreater($PARAM[count],99) + !Integer.IsGreater($PARAM[count],999)</visible>
				</control>
				<control type="label">
					<shadowcolor/>
					<left>14</left>
					<top>4</top>
					<width>54</width>
					<height>30</height>
					<font>apptv20</font>
					<label>$INFO[$PARAM[count]]</label>
					<textcolor>white</textcolor>
					<align>center</align>
				</control>
			</control>
		</definition>
	</include>
	<include name="listitem-weather">
		<param name="left" default="0"/>
		<param name="top" default="0"/>
		<param name="size" default="100"/>
		<param name="currently"/>
		<param name="visible"/>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<animation condition="true" effect="zoom" start="100" end="$PARAM[size]" center="auto">Conditional</animation>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<control type="image">
					<left>60</left>
					<top>30</top>
					<width>140</width>
					<height>140</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">http://localhost:52307/getvarimage&amp;title=$INFO{Window(weather).Property(Day0.OutlookIcon)}</texture>
				</control>
				<control type="label">
					<left>200</left>
					<top>70</top>
					<width>130</width>
					<height>57</height>
					<font>apptv38</font>
					<textcolor>white</textcolor>
					<label>$INFO[$PARAM[currently]]</label>
					<align>center</align>
				</control>
			</control>
		</definition>
	</include>
	<include name="listpanelitems">
		<param name="itemcustombase"/>
		<param name="itemthumb"/>
		<param name="itemlabel"/>
		<param name="itemmenuheading"/>
		<param name="itemmenuid"/>
		<param name="itemcondition"/>
		<param name="itemtoggle"/>
		<definition>
			<item>
				<thumb>$PARAM[itemthumb]</thumb>
				<label>$PARAM[itemlabel]</label>
				<property name="isActive">true</property>
				<property name="visibleToggle">$PARAM[itemtoggle]</property>
				<property name="customBase">$PARAM[itemcustombase]</property>
				<property name="menuHeading">$PARAM[itemmenuheading]</property>
				<property name="menuID">$PARAM[itemmenuid]</property>
				<onclick>SetProperty(ListActive,true,settings)</onclick>
				<onclick>SetProperty(ListLabel,$PARAM[itemlabel],settings)</onclick>
				<onclick>SetProperty(ListID,$PARAM[itemmenuid],settings)</onclick>
				<onclick>SetProperty(ListToggle,$PARAM[itemtoggle],settings)</onclick>
				<onclick>SetProperty(ListCustomBase,$PARAM[itemcustombase],settings)</onclick>
				<onclick>SetProperty(CurrentType,$INFO[Skin.String($PARAM[itemcustombase].Type)],settings)</onclick>
				<onclick>SetProperty(CurrentAction,$PARAM[itemcustombase].Path,settings)</onclick>
				<onclick>SetProperty(CurrentLabel,$PARAM[itemcustombase].Label,settings)</onclick>
				<onclick>SetProperty(CurrentIcon,$PARAM[itemcustombase].Icon,settings)</onclick>
				<onclick>ActivateWindow(1153)</onclick>
				<visible>$PARAM[itemcondition]</visible>
			</item>
			<item>
				<thumb>$PARAM[itemthumb]</thumb>
				<label>$PARAM[itemlabel]</label>
				<property name="isActive"/>
				<property name="visibleToggle">$PARAM[itemtoggle]</property>
				<property name="customBase">$PARAM[itemcustombase]</property>
				<property name="menuHeading">$PARAM[itemmenuheading]</property>
				<property name="menuID">$PARAM[itemmenuid]</property>
				<onclick>ClearProperty(ListActive,settings)</onclick>
				<onclick>SetProperty(ListLabel,$PARAM[itemlabel],settings)</onclick>
				<onclick>SetProperty(ListID,$PARAM[itemmenuid],settings)</onclick>
				<onclick>SetProperty(ListToggle,$PARAM[itemtoggle],settings)</onclick>
				<onclick>SetProperty(ListCustomBase,$PARAM[itemcustombase],settings)</onclick>
				<onclick>SetProperty(CurrentType,$INFO[Skin.String($PARAM[itemcustombase].Type)],settings)</onclick>
				<onclick>SetProperty(CurrentAction,$PARAM[itemcustombase].Path,settings)</onclick>
				<onclick>SetProperty(CurrentLabel,$PARAM[itemcustombase].Label,settings)</onclick>
				<onclick>SetProperty(CurrentIcon,$PARAM[itemcustombase].Icon,settings)</onclick>
				<onclick>ActivateWindow(1153)</onclick>
				<visible>!$PARAM[itemcondition]</visible>
			</item>
		</definition>
	</include>
	<include name="page-indicator">
		<param name="indicatorleft" default="0"/>
		<param name="indicatortop" default="0"/>
		<param name="indicatorwidth" default="0"/>
		<param name="indicatorheight" default="0"/>
		<param name="indicatororientation" default="horizontal"/>
		<param name="grp1indicate"/>
		<param name="grp1visible" default="false"/>
		<param name="grp2indicate"/>
		<param name="grp2visible" default="false"/>
		<param name="grp3indicate"/>
		<param name="grp3visible" default="false"/>
		<param name="grp4indicate"/>
		<param name="grp4visible" default="false"/>
		<param name="grp5indicate"/>
		<param name="grp5visible" default="false"/>
		<definition>
			<control type="grouplist" id="3500">
				<left>$PARAM[indicatorleft]</left>
				<top>$PARAM[indicatortop]</top>
				<width>$PARAM[indicatorwidth]</width>
				<height>$PARAM[indicatorheight]</height>
				<orientation>$PARAM[indicatororientation]</orientation>
				<itemgap>-12</itemgap>
				<aligny>center</aligny>
				<align>center</align>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp1indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp1visible]</visible>
				</control>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp2indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp2visible]</visible>
				</control>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp3indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp3visible]</visible>
				</control>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp4indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp4visible]</visible>
				</control>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp5indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp5visible]</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="page-offscreen-vertical">
		<param name="indicator1left" default="0"/>
		<param name="indicator1top" default="0"/>
		<param name="indicator2left" default="0"/>
		<param name="indicator2top" default="0"/>
		<param name="indicatorsize" default="0"/>
		<param name="indicatorcontainer"/>
		<definition>
			<control type="group">
				<control type="image">
					<left>$PARAM[indicator1left]</left>
					<top>$PARAM[indicator1top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-up.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasPrevious</visible>
				</control>
				<control type="image">
					<left>$PARAM[indicator2left]</left>
					<top>$PARAM[indicator2top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-down.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasNext</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="page-offscreen-horizontal">
		<param name="indicator1left" default="0"/>
		<param name="indicator1top" default="0"/>
		<param name="indicator2left" default="0"/>
		<param name="indicator2top" default="0"/>
		<param name="indicatorsize" default="0"/>
		<param name="indicatorcontainer"/>
		<definition>
			<control type="group">
				<control type="image">
					<left>$PARAM[indicator1left]</left>
					<top>$PARAM[indicator1top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-left.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasPrevious</visible>
				</control>
				<control type="image">
					<left>$PARAM[indicator2left]</left>
					<top>$PARAM[indicator2top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-right.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasNext</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="touch-controls">
		<control type="grouplist" id="8000">
			<visible>$EXP[isEnabledTouch]</visible>
			<left>30</left>
			<top>1026</top>
			<width>564</width>
			<height>48</height>
			<itemgap>18</itemgap>
			<orientation>horizontal</orientation>
			<control type="button">
				<!-- Back -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-back.png</texturefocus>
				<texturenofocus>touch-back.png</texturenofocus>
				<onclick>Back</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="togglebutton">
				<!-- OSD Play/Pause -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-play.png</texturefocus>
				<texturenofocus>touch-play.png</texturenofocus>
				<alttexturefocus>touch-pause.png</alttexturefocus>
				<alttexturenofocus>touch-pause.png</alttexturenofocus>
				<usealttexture>Player.Paused</usealttexture>
				<onclick>ActivateWindow(playercontrols)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasAudio | Player.HasVideo</visible>
			</control>
			<control type="button">
				<!-- Zoom -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-zoom.png</texturefocus>
				<texturenofocus>touch-zoom.png</texturenofocus>
				<onclick>FullScreen</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasAudio | Player.HasVideo</visible>
			</control>
			<control type="button">
				<!-- Search -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-search.png</texturefocus>
				<texturenofocus>touch-search.png</texturenofocus>
				<onclick condition="!System.HasAddon(script.globalsearch)">InstallAddon(script.globalsearch)</onclick>
				<onclick condition="System.HasAddon(script.globalsearch)">RunScript(script.globalsearch)</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="button">
				<!-- Favourite -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-fav.png</texturefocus>
				<texturenofocus>touch-fav.png</texturenofocus>
				<onclick>ActivateWindow(favourites)</onclick>
				<include>focus-zoom</include>
			</control>
			<control type="button">
				<!-- Screen Settings -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-settings.png</texturefocus>
				<texturenofocus>touch-settings.png</texturenofocus>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetProperty(ShowScreenSettings,show,home)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(ShowScreenSettings),show)">ClearProperty(ShowScreenSettings,home)</onclick>
				<include>focus-zoom</include>
				<visible>!Skin.HasSetting(lock-screensettings)</visible>
			</control>
		</control>
	</include>
	<include name="settings-submenu-common">
		<width>1328</width>
		<height>84</height>
		<font>apptv22</font>
	</include>
	<include name="videoinfo-options-common">
		<height>144</height>
		<width>144</width>
		<font>apptv16</font>
		<textcolor>disabled-text</textcolor>
		<focusedcolor>button-text</focusedcolor>
		<align>center</align>
		<aligny>top</aligny>
		<wrapmultiline>true</wrapmultiline>
		<textwidth>135</textwidth>
		<textoffsety>84</textoffsety>
	</include>
	<include name="keyboard-key-common">
		<shadowcolor/>
		<width>96</width>
		<height>96</height>
		<texturenofocus border="9">key-standard-nofocus.png</texturenofocus>
		<texturefocus border="9">key-standard-focus.png</texturefocus>
		<textcolor>keyboard-focus-text</textcolor>
		<focusedcolor>keyboard-focus-text</focusedcolor>
		<font>apptv25</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="keyboard-auto-complete">
		<content>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=10</content>
	</include>
	<include name="overlay-label">
		<width>1170</width>
		<height>34</height>
		<font>apptv23</font>
	</include>
	<include name="scrolltext">
		<scroll>true</scroll>
		<visible>![System.ScreenSaverActive]</visible>
	</include>
	<include name="focus-zoom">
		<animation effect="zoom" start="100" end="116" center="auto" time="200" tween="back" easing="out" reversible="false">focus</animation>
	</include>
	<include name="settingbutton-fade">
		<animation effect="fade" start="100" end="60">Visible</animation>
	</include>
	<include name="busy-spin">
		<animation effect="rotate" start="360" end="0" center="auto" time="5400" loop="true" condition="true">conditional</animation>
	</include>
	<include name="screen-settings">
		<animation effect="slide" start="0,0" end="0,-1080">Visible</animation>
		<visible allowhiddenfocus="true">[ControlGroup(9000).HasFocus() | String.IsEqual(Window(home).Property(ShowScreenSettings),show)] + !Skin.HasSetting(lock-screensettings)</visible>
	</include>
	<include name="window-openclose">
		<animation effect="fade" time="100">WindowOpen</animation>
		<animation effect="fade" time="100">WindowClose</animation>
	</include>
	<include name="zoom-openclose">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" time="200"/>
			<effect type="zoom" start="110" end="100" time="200" center="auto"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" time="200"/>
			<effect type="zoom" end="110" time="200" center="auto"/>
		</animation>
	</include>
</includes>