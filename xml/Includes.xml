<?xml version="1.0" encoding="utf-8"?>
<includes>
	<!--
	CUSTOM WINDOWS LIST
		_Overlay 1150
		_3DDialogSelect 1151
		_HomeCustomise 1152
		_HomeMenuItems 1153
		_DialogSelect 1154
		_AddonsList 1155
		_PVRRootList 1156
		_DummyDialog 1157
		_RidSoundtrack 1158
		_StartSoundtrack 1159
		_StopSoundtrack 1160
	-->
	<!-- Expressions section -->
	<expression name="isFullscreenVideo">Window.IsActive(fullscreenvideo)</expression>
	<expression name="isnotFullscreenVideo">!Window.IsActive(fullscreenvideo)</expression>
	<expression name="isVideoAddon">String.Contains(Container.FolderPath,plugin://plugin.video)</expression>
	<expression name="isMovie">String.IsEqual(ListItem.DBTYPE,movie)</expression>
	<expression name="isVideo">String.IsEqual(ListItem.DBTYPE,video)</expression>
	<expression name="isTvshow">String.IsEqual(ListItem.DBTYPE,tvshow)</expression>
	<expression name="isSeason">String.IsEqual(ListItem.DBTYPE,season)</expression>
	<expression name="isSet">String.IsEqual(ListItem.DBTYPE,set)</expression>
	<expression name="isEpisode">String.IsEqual(ListItem.DBTYPE,episode)</expression>
	<expression name="isMusicvideo">String.IsEqual(ListItem.DBTYPE,musicvideo)</expression>
	<expression name="isArtist">String.IsEqual(ListItem.DBTYPE,artist)</expression>
	<expression name="isnotArtist">![String.IsEqual(ListItem.DBTYPE,artist)]</expression>
	<expression name="isAlbum">String.IsEqual(ListItem.DBTYPE,album)</expression>
	<expression name="isSong">String.IsEqual(ListItem.DBTYPE,song)</expression>
	<expression name="isEmptyIcon">String.IsEmpty(ListItem.Icon)</expression>
	<expression name="isnotEmptyIcon">![String.IsEmpty(ListItem.Icon)]</expression>
	<expression name="isEmptyPVRIcon">String.IsEmpty(ListItem.Icon) + String.IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))</expression>
	<expression name="isnotEmptyPVRIcon">!String.IsEmpty(ListItem.Icon) | !String.IsEmpty(Window(home).Property(SkinHelper.ListItem.ChannelLogo))</expression>
	<expression name="isEmptyDBID">String.IsEmpty(ListItem.DBID)</expression>
	<expression name="isnotEmptyDBID">![String.IsEmpty(ListItem.DBID)]</expression>
	<expression name="isDefaultIcon">String.StartsWith(ListItem.Icon,Default)</expression>
	<expression name="isnotDefaultIcon">![String.StartsWith(ListItem.Icon,Default)]</expression>
	<expression name="isInfoDialog">[Window.IsVisible(addoninformation) | Window.IsVisible(movieinformation) | Window.IsVisible(musicinformation) | Window.IsVisible(songinformation)]</expression>
	<expression name="isEnabledTouch">Skin.HasSetting(show-touchcontrols)</expression>
	<expression name="isEnabledParentDirectory">System.GetBool(filelists.showparentdiritems)</expression>
	<expression name="isnotEnabledParentDirectory">!System.GetBool(filelists.showparentdiritems)</expression>
	<expression name="isEnabledScrollbar">!String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])</expression>
	<expression name="isParentFolder">ListItem.IsParentFolder</expression>
	<expression name="isnotParentFolder">!ListItem.IsParentFolder</expression>

	<include file="Includes_Variables.xml"/>

	<include file="Defaults.xml"/>

	<!-- Video Lyrics includes, "borrowed" from skin.aeon.nox.5 -->
	<!-- Thanks to BigNoid -->
	<include name="Lyrics1">
		<param name="col11" default="black"/>
		<param name="col12" default="black"/>
		<param name="col13" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="300"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="500"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col11]</textcolor>
			</control>
			<control type="label">
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="600"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="800"/>
				</animation>
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col12]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-200,0" end="0,0" tween="back" easing="out" time="900"/>
					<effect type="zoom" start="25" end="100" tween="back" easing="out" time="1100"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr1</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col13]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics1b">
		<param name="col14" default="black"/>
		<param name="1b_left" default="510"/>
		<param name="1b_top" default="224"/>
		<definition>
			<control type="group">
				<left>$PARAM[1b_left]</left>
				<top>$PARAM[1b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,1) | String.EndsWith(Container(110).Currentitem,16) | String.EndsWith(Container(110).Currentitem,31) | String.EndsWith(Container(110).Currentitem,46) | String.EndsWith(Container(110).Currentitem,61) | String.EndsWith(Container(110).Currentitem,76) | String.EndsWith(Container(110).Currentitem,91) | String.EndsWith(Container(110).Currentitem,06)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="300" start="-200,0" end="0,0" tween="back" easing="out" time="900"/>
					<effect type="zoom" center="450,370" delay="300" start="25" end="100" tween="sine" easing="out" time="900"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>80</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr1b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col14]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics2">
		<param name="col21" default="black"/>
		<param name="col22" default="black"/>
		<param name="col23" default="black"/>
		<param name="col24" default="black"/>
		<param name="2_left" default="0"/>
		<param name="2_top" default="250"/>
		<definition>
			<control type="group">
				<top>$PARAM[2_top]</top>
				<left>$PARAM[2_left]</left>
				<control type="grouplist">
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="0" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr2</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col21]</textcolor>
					</control>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr2</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col22]</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<left>0</left>
					<top>20</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>30</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr2</font>
						<shadowcolor>black</shadowcolor>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>$PARAM[col23]</textcolor>
					</control>
					<control type="label">
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<visible>String.IsEqual(Container(110).Currentitem,2) | String.EndsWith(Container(110).Currentitem,17) | String.EndsWith(Container(110).Currentitem,32) | String.EndsWith(Container(110).Currentitem,47) | String.EndsWith(Container(110).Currentitem,62) | String.EndsWith(Container(110).Currentitem,77) | String.EndsWith(Container(110).Currentitem,92) | String.EndsWith(Container(110).Currentitem,07)</visible>
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="480,200" start="0" end="100" tween="sine" easing="out" time="700"/>
						</animation>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr2b</font>
						<shadowcolor>black</shadowcolor>
						<aligny>top</aligny>
						<textcolor>$PARAM[col24]</textcolor>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics3">
		<param name="col31" default="black"/>
		<param name="col32" default="black"/>
		<param name="col33" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="100,-300" end="50,0" time="250" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="15" end="-10" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="10" time="200" tween="back" easing="out"/>
					<effect type="slide" delay="900" end="-50,0" time="300" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col31]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="0,-300" end="0,0" time="500" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="-8" end="11" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="-11" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col32]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="-100,-300" end="-50,0" time="650" tween="back" easing="out"/>
					<effect type="rotate" delay="900" center="auto" start="22" end="-12" time="200" tween="sine" easing="out"/>
					<effect type="rotate" delay="1100" center="auto" end="12" time="300" tween="back" easing="out"/>
					<effect type="slide" delay="900" end="50,0" time="350" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>115</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr3</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col33]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics3b">
		<param name="col34" default="black"/>
		<param name="3b_left" default="510"/>
		<param name="3b_top" default="230"/>
		<definition>
			<control type="group">
				<left>$PARAM[3b_left]</left>
				<top>$PARAM[3b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,3) | String.EndsWith(Container(110).Currentitem,18) | String.EndsWith(Container(110).Currentitem,33) | String.EndsWith(Container(110).Currentitem,48) | String.EndsWith(Container(110).Currentitem,63) | String.EndsWith(Container(110).Currentitem,78) | String.EndsWith(Container(110).Currentitem,93) | String.EndsWith(Container(110).Currentitem,08)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="700" start="0,250" end="0,0" time="350" tween="back"/>
					<effect type="rotate" delay="700" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>74</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr3b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col34]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics4">
		<param name="col41" default="black"/>
		<param name="col42" default="black"/>
		<param name="col43" default="black"/>
		<param name="col44" default="black"/>
		<param name="4_left" default="110"/>
		<param name="4_top" default="30"/>
		<definition>
			<control type="group">
				<top>$PARAM[4_top]</top>
				<left>$PARAM[4_left]</left>
				<animation effect="rotate" center="auto" start="5" end="5" condition="true">Conditional</animation>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" end="0,-115" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="-280,0" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="250" tween="back" easing="out"/>
					</animation>
					<left>-30</left>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col41]</textcolor>
				</control>
				<control type="label">
					<left>-30</left>
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="-280,0" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="300" tween="back" easing="out"/>
					</animation>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col42]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="0,-160" time="350" tween="back" easing="out"/>
					</animation>
					<left>830</left>
					<top>520</top>
					<width>1135</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr4</font>
					<shadowcolor>black</shadowcolor>
					<aligny>center</aligny>
					<textcolor>$PARAM[col43]</textcolor>
				</control>
				<control type="textbox">
					<left>860</left>
					<top>478</top>
					<width>700</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,4) | String.EndsWith(Container(110).Currentitem,19) | String.EndsWith(Container(110).Currentitem,34) | String.EndsWith(Container(110).Currentitem,49) | String.EndsWith(Container(110).Currentitem,64) | String.EndsWith(Container(110).Currentitem,79) | String.EndsWith(Container(110).Currentitem,94) | String.EndsWith(Container(110).Currentitem,09)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="1100" end="0,-160" time="350" tween="back" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr4b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col44]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics5">
		<param name="col51" default="black"/>
		<param name="col52" default="black"/>
		<param name="col53" default="black"/>
		<param name="col54" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-1950,0" time="500" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col51]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-150,70"/>
					<effect type="slide" delay="100" end="-2000,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="650" end="200,0" time="200" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col52]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-200,140"/>
					<effect type="slide" delay="150" end="-1950,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="700" end="200,0" time="250" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr5</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col53]</textcolor>
			</control>
			<control type="label">
				<wrapmultiline>true</wrapmultiline>
				<visible>String.IsEqual(Container(110).Currentitem,5) | String.EndsWith(Container(110).Currentitem,20) | String.EndsWith(Container(110).Currentitem,35) | String.EndsWith(Container(110).Currentitem,50) | String.EndsWith(Container(110).Currentitem,65) | String.EndsWith(Container(110).Currentitem,80) | String.EndsWith(Container(110).Currentitem,95)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-250,196"/>
					<effect type="slide" delay="250" end="-2100,0" time="500" tween="sine" easing="out"/>
					<effect type="slide" delay="700" end="400,0" time="300" tween="sine" easing="out"/>
				</animation>
				<width min="100" max="700">auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part4)]</label>
				<font>lyr5b</font>
				<shadowcolor>black</shadowcolor>
				<aligny>top</aligny>
				<textcolor>$PARAM[col54]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics6">
		<param name="col61" default="black"/>
		<param name="col62" default="black"/>
		<param name="col63" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col61]</textcolor>
			</control>
			<control type="label">
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="150" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" delay="150" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col62]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="300" end="0,400" time="1000" tween="bounce" easing="out"/>
					<effect type="rotate" delay="300" start="440" center="auto" end="360" time="1000" tween="cubic" easing="out"/>
				</animation>
				<width>auto</width>
				<height>100</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr6</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[col63]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics6b">
		<param name="col64" default="black"/>
		<param name="6b_left" default="510"/>
		<param name="6b_top" default="224"/>
		<definition>
			<control type="group">
				<left>$PARAM[6b_left]</left>
				<top>$PARAM[6b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,6) | String.EndsWith(Container(110).Currentitem,21) | String.EndsWith(Container(110).Currentitem,36) | String.EndsWith(Container(110).Currentitem,51) | String.EndsWith(Container(110).Currentitem,66) | String.EndsWith(Container(110).Currentitem,81) | String.EndsWith(Container(110).Currentitem,96)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="225" start="0,200" end="0,0" time="350" tween="back"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>80</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr6b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col64]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics7">
		<param name="col71" default="black"/>
		<param name="col72" default="black"/>
		<param name="col73" default="black"/>
		<param name="col74" default="black"/>
		<param name="7_left" default="10"/>
		<param name="7_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[7_top]</top>
				<left>$PARAM[7_left]</left>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" end="0,-115" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="250" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>520</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr7</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col71]</textcolor>
				</control>
				<control type="label">
					<left>50</left>
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="600" end="0,-160" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="300" tween="back" easing="out"/>
					</animation>
					<top>520</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr7a</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col72]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="600" center="960,540" start="0" end="100" time="250" tween="sine" easing="out"/>
						<effect type="slide" delay="1150" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>350</top>
					<width>1200</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr7b</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col73]</textcolor>
				</control>
				<control type="textbox">
					<left>1080</left>
					<top>-15</top>
					<width>525</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,7) | String.EndsWith(Container(110).Currentitem,22) | String.EndsWith(Container(110).Currentitem,37) | String.EndsWith(Container(110).Currentitem,52) | String.EndsWith(Container(110).Currentitem,67) | String.EndsWith(Container(110).Currentitem,82) | String.EndsWith(Container(110).Currentitem,97)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="1100" center="auto" start="0" end="100" time="350" tween="back" easing="out"/>
						<effect type="rotate" delay="1100" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr7c</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col74]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics8">
		<param name="col81" default="black"/>
		<param name="col82" default="black"/>
		<param name="col83" default="black"/>
		<definition>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotatey" center="0,0" start="90" end="0" time="450" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col81]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotatex" center="0,0" start="90" end="0" time="600" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col82]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="rotate" center="0,0" start="170" end="0" time="750" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr8</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col83]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics8b">
		<param name="col84" default="black"/>
		<param name="8b_left" default="510"/>
		<param name="8b_top" default="270"/>
		<definition>
			<control type="group">
				<left>$PARAM[8b_left]</left>
				<top>$PARAM[8b_top]</top>
				<visible>String.IsEqual(Container(110).Currentitem,8) | String.EndsWith(Container(110).Currentitem,23) | String.EndsWith(Container(110).Currentitem,38) | String.EndsWith(Container(110).Currentitem,53) | String.EndsWith(Container(110).Currentitem,68) | String.EndsWith(Container(110).Currentitem,83) | String.EndsWith(Container(110).Currentitem,98)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" delay="750" start="-800,0" end="0,0" time="400" tween="back" easing="out"/>
					<effect type="rotate" delay="750" center="auto" start="3" end="0" time="575" tween="bounce" easing="out"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>24</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr8b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col84]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics9">
		<param name="col91" default="black"/>
		<param name="col92" default="black"/>
		<param name="col93" default="black"/>
		<param name="col94" default="black"/>
		<param name="9_left" default="20"/>
		<param name="9_top" default="-20"/>
		<definition>
			<control type="group">
				<top>$PARAM[9_top]</top>
				<left>$PARAM[9_left]</left>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="400" start="0,-400" end="0,0" time="250" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="250" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>395</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col93]</textcolor>
				</control>
				<control type="label">
					<left>0</left>
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="150" start="0,-400" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="300" tween="back" easing="out"/>
					</animation>
					<top>270</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col92]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="0,-400" end="0,0" time="250" tween="back" easing="out"/>
						<effect type="rotate" center="720,270" delay="900" start="35" end="0" time="350" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>145</top>
					<width>940</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr9</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col91]</textcolor>
				</control>
				<control type="textbox">
					<left>960</left>
					<top>30</top>
					<width>600</width>
					<height>600</height>
					<visible>String.IsEqual(Container(110).Currentitem,9) | String.EndsWith(Container(110).Currentitem,24) | String.EndsWith(Container(110).Currentitem,39) | String.EndsWith(Container(110).Currentitem,54) | String.EndsWith(Container(110).Currentitem,69) | String.EndsWith(Container(110).Currentitem,84) | String.EndsWith(Container(110).Currentitem,99)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="700" start="600,0" end="0,0" time="350" tween="back"/>
						<effect type="rotate" delay="700" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr9b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col94]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics10">
		<param name="col101" default="black"/>
		<param name="col102" default="black"/>
		<param name="col103" default="black"/>
		<param name="col104" default="black"/>
		<param name="10_left" default="0"/>
		<param name="10_top" default="150"/>
		<definition>
			<control type="group">
				<top>$PARAM[10_top]</top>
				<left>$PARAM[10_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="350"/>
						<effect type="slide" delay="800" start="0,0" end="0,-200" time="350" tween="back" easing="out"/>
					</animation>
					<left>0</left>
					<top>154</top>
					<width>1920</width>
					<height>115</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr10</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col101]</textcolor>
				</control>
				<control type="grouplist">
					<left>0</left>
					<top>260</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>35</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="550"/>
							<effect type="slide" delay="800" start="0,0" end="0,-200" time="400" tween="back" easing="out"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr10</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col102]</textcolor>
					</control>
					<control type="label">
						<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="auto" start="400" end="100" tween="back" easing="out" time="750"/>
							<effect type="slide" delay="800" start="0,0" end="0,-200" time="450" tween="back" easing="out"/>
						</animation>
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr10</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col103]</textcolor>
					</control>
				</control>
				<control type="textbox">
					<left>610</left>
					<top>178</top>
					<width>700</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,10) | String.EndsWith(Container(110).Currentitem,25) | String.EndsWith(Container(110).Currentitem,40) | String.EndsWith(Container(110).Currentitem,55) | String.EndsWith(Container(110).Currentitem,70) | String.EndsWith(Container(110).Currentitem,85) | String.EndsWith(Container(110).Currentitem,00)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="1150" start="400,0" end="0,0" time="200" tween="sine" easing="out"/>
						<effect type="rotate" delay="1150" center="auto" start="4" end="0" time="600" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr10b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col104]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics11">
		<param name="col111" default="black"/>
		<param name="col112" default="black"/>
		<param name="col113" default="black"/>
		<param name="col114" default="black"/>
		<param name="11_left" default="0"/>
		<param name="11_top" default="250"/>
		<definition>
			<control type="group">
				<top>$PARAM[11_top]</top>
				<left>$PARAM[11_left]</left>
				<control type="grouplist">
					<animation type="Visible" reversible="false">
						<effect type="slide" start="0,-200" end="0,0" time="200"/>
					</animation>
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr11b</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col112]</textcolor>
					</control>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr11</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>00fFFFFF</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="250" start="400,0" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>-95</top>
					<width>1920</width>
					<height>125</height>
					<itemgap>25</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part1)]</label>
						<font>lyr11b</font>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>00fFFFFF</textcolor>
					</control>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part2)]</label>
						<font>lyr11</font>
						<shadowcolor>black</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<textcolor>$PARAM[col113]</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="500" start="-400,0" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>15</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>40</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr11</font>
						<shadowcolor>black</shadowcolor>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>$PARAM[col111]</textcolor>
					</control>
					<control type="label">
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr11b</font>
						<aligny>top</aligny>
						<textcolor>00ffffff</textcolor>
					</control>
				</control>
				<control type="grouplist">
					<visible>String.EndsWith(Container(110).Currentitem,11) | String.EndsWith(Container(110).Currentitem,26) | String.EndsWith(Container(110).Currentitem,41) | String.EndsWith(Container(110).Currentitem,56) | String.EndsWith(Container(110).Currentitem,71) | String.EndsWith(Container(110).Currentitem,86) | String.EndsWith(Container(110).Currentitem,01)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="750" start="0,200" end="0,0" time="200"/>
					</animation>
					<left>0</left>
					<top>30</top>
					<width>1920</width>
					<height>600</height>
					<itemgap>40</itemgap>
					<scrolltime>0</scrolltime>
					<orientation>horizontal</orientation>
					<visible>true</visible>
					<align>center</align>
					<control type="label">
						<width>auto</width>
						<height>125</height>
						<label>$INFO[Container(110).ListItem.Property(part3)]</label>
						<font>lyr11</font>
						<align>right</align>
						<aligny>top</aligny>
						<textcolor>00ffffff</textcolor>
					</control>
					<control type="label">
						<animation effect="slide" end="0,10" condition="true">Conditional</animation>
						<width max="700">auto</width>
						<height>600</height>
						<wrapmultiline>true</wrapmultiline>
						<label>$INFO[Container(110).ListItem.Property(part4)]</label>
						<font>lyr11b</font>
						<shadowcolor>black</shadowcolor>
						<aligny>top</aligny>
						<textcolor>$PARAM[col114]</textcolor>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12">
		<param name="col121" default="black"/>
		<param name="12_left" default="10"/>
		<param name="12_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[12_top]</top>
				<left>$PARAM[12_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" center="auto" start="0" end="100" time="200"/>
					</animation>
					<left>40</left>
					<top>5</top>
					<width>1820</width>
					<height>400</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr12</font>
					<shadowcolor>black</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<scrollsuffix/>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col121]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12b">
		<param name="col122" default="black"/>
		<param name="col123" default="black"/>
		<param name="12b_left" default="10"/>
		<param name="12b_top" default="180"/>
		<definition>
			<control type="grouplist">
				<top>$PARAM[12b_top]</top>
				<left>$PARAM[12b_left]</left>
				<width>1900</width>
				<height>350</height>
				<itemgap>45</itemgap>
				<scrolltime>0</scrolltime>
				<orientation>horizontal</orientation>
				<visible>true</visible>
				<align>center</align>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr12b</font>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>00fFFFFF</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="500" center="auto" start="0" end="100" time="200"/>
					</animation>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr12c</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col123]</textcolor>
				</control>
			</control>
			<control type="grouplist">
				<top>$PARAM[12b_top]</top>
				<left>$PARAM[12b_left]</left>
				<width>1900</width>
				<height>350</height>
				<itemgap>45</itemgap>
				<scrolltime>0</scrolltime>
				<orientation>horizontal</orientation>
				<visible>true</visible>
				<align>center</align>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="250" center="auto" start="0" end="100" time="200"/>
					</animation>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr12b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col122]</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<width>auto</width>
					<height>350</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr12c</font>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>00fFFFFF</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics12c">
		<param name="col124" default="black"/>
		<param name="12c_left" default="10"/>
		<param name="12c_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[12c_top]</top>
				<left>$PARAM[12c_left]</left>
				<control type="textbox">
					<left>600</left>
					<top>390</top>
					<width>700</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,12) | String.EndsWith(Container(110).Currentitem,27) | String.EndsWith(Container(110).Currentitem,42) | String.EndsWith(Container(110).Currentitem,57) | String.EndsWith(Container(110).Currentitem,72) | String.EndsWith(Container(110).Currentitem,87) | String.EndsWith(Container(110).Currentitem,02)</visible>
					<animation type="Visible" reversible="false">
						<effect type="zoom" delay="800" center="960,400" start="0" end="100" time="200"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr12d</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col124]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics13">
		<param name="col131" default="black"/>
		<param name="col132" default="black"/>
		<param name="col133" default="black"/>
		<definition>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="300"/>
					<effect type="rotate" center="auto" start="360" end="0" time="300" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col131]</textcolor>
			</control>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="500"/>
					<effect type="rotate" center="auto" start="450" end="0" time="500" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col132]</textcolor>
			</control>
			<control type="label">
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="auto" start="25" end="100" time="600"/>
					<effect type="rotate" center="auto" start="540" end="0" time="700" tween="sine" easing="out"/>
				</animation>
				<width>auto</width>
				<height>120</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr13</font>
				<shadowcolor>black</shadowcolor>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col133]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics13b">
		<param name="col134" default="black"/>
		<param name="13b_left" default="510"/>
		<param name="13b_top" default="220"/>
		<definition>
			<control type="group">
				<left>$PARAM[13b_left]</left>
				<top>$PARAM[13b_top]</top>
				<visible>String.EndsWith(Container(110).Currentitem,13) | String.EndsWith(Container(110).Currentitem,28) | String.EndsWith(Container(110).Currentitem,43) | String.EndsWith(Container(110).Currentitem,58) | String.EndsWith(Container(110).Currentitem,73) | String.EndsWith(Container(110).Currentitem,88) | String.EndsWith(Container(110).Currentitem,03)</visible>
				<animation type="Visible" reversible="false">
					<effect type="zoom" center="450,370" delay="700" start="25" end="100" tween="sine" easing="out" time="300"/>
				</animation>
				<control type="textbox">
					<left>0</left>
					<top>82</top>
					<width>900</width>
					<height>600</height>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr13b</font>
					<shadowcolor>black</shadowcolor>
					<align>center</align>
					<aligny>top</aligny>
					<textcolor>$PARAM[col134]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="Lyrics14">
		<param name="col141" default="00ffffff"/>
		<param name="col142" default="00ffffff"/>
		<param name="col143" default="00ffffff"/>
		<definition>
			<control type="label">
				<animation effect="rotate" center="auto" start="4" end="4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,-400"/>
					<effect type="slide" delay="100" end="0,400" time="10"/>
					<effect type="fade" delay="100" start="0" end="100" time="250"/>
					<effect type="zoom" delay="100" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part1)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col141]</textcolor>
			</control>
			<control type="label">
				<animation effect="rotate" center="auto" start="-4" end="-4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="-10,-400"/>
					<effect type="slide" delay="450" end="0,390" time="10"/>
					<effect type="fade" delay="450" start="0" end="100" time="250"/>
					<effect type="zoom" delay="450" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part2)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col142]</textcolor>
			</control>
			<control type="label">
				<animation effect="rotate" center="auto" start="4" end="4" condition="true">Conditional</animation>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" end="0,-400"/>
					<effect type="slide" delay="800" end="0,410" time="10"/>
					<effect type="fade" delay="800" start="0" end="100" time="250"/>
					<effect type="zoom" delay="800" start="0" end="100" time="250" tween="back" easing="out"/>
				</animation>
				<width>auto</width>
				<height>350</height>
				<label>$INFO[Container(110).ListItem.Property(part3)]</label>
				<font>lyr14</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col143]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics14b">
		<param name="col144" default="00ffffff"/>
		<param name="14b_left" default="610"/>
		<param name="14b_top" default="340"/>
		<definition>
			<control type="textbox">
				<left>$PARAM[14b_left]</left>
				<top>$PARAM[14b_top]</top>
				<visible>String.EndsWith(Container(110).Currentitem,14) | String.EndsWith(Container(110).Currentitem,29) | String.EndsWith(Container(110).Currentitem,44) | String.EndsWith(Container(110).Currentitem,59) | String.EndsWith(Container(110).Currentitem,74) | String.EndsWith(Container(110).Currentitem,89) | String.EndsWith(Container(110).Currentitem,04)</visible>
				<animation type="Visible" reversible="false">
					<effect type="fade" delay="1200" start="0" end="100" time="250"/>
					<effect type="zoom" center="960,500" delay="1200" start="0" end="105" time="250" tween="back" easing="out"/>
				</animation>
				<width>700</width>
				<height>600</height>
				<label>$INFO[Container(110).ListItem.Property(part4)]</label>
				<font>lyr14b</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>$PARAM[col144]</textcolor>
			</control>
		</definition>
	</include>
	<include name="Lyrics15">
		<param name="col151" default="black"/>
		<param name="col152" default="black"/>
		<param name="col153" default="black"/>
		<param name="col154" default="black"/>
		<param name="15_left" default="170"/>
		<param name="15_top" default="0"/>
		<definition>
			<control type="group">
				<top>$PARAM[15_top]</top>
				<left>$PARAM[15_left]</left>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>125</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part1)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col151]</textcolor>
				</control>
				<control type="label">
					<left>50</left>
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="150" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<top>250</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part2)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col152]</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="300" start="1000,0" end="0,0" time="350" tween="back" easing="out"/>
						<effect type="slide" delay="800" start="0,0" end="-200,0" time="350" tween="back" easing="out"/>
					</animation>
					<left>50</left>
					<top>375</top>
					<width>925</width>
					<height>125</height>
					<label>$INFO[Container(110).ListItem.Property(part3)]</label>
					<font>lyr15</font>
					<shadowcolor>black</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col153]</textcolor>
				</control>
				<control type="textbox">
					<left>800</left>
					<top>10</top>
					<width>600</width>
					<height>600</height>
					<visible>String.EndsWith(Container(110).Currentitem,15) | String.EndsWith(Container(110).Currentitem,30) | String.EndsWith(Container(110).Currentitem,45) | String.EndsWith(Container(110).Currentitem,60) | String.EndsWith(Container(110).Currentitem,75) | String.EndsWith(Container(110).Currentitem,90) | String.EndsWith(Container(110).Currentitem,05)</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" delay="650" start="0,-400" end="0,0" time="1200" tween="bounce" easing="out"/>
					</animation>
					<label>$INFO[Container(110).ListItem.Property(part4)]</label>
					<font>lyr15b</font>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$PARAM[col154]</textcolor>
				</control>
			</control>
		</definition>
	</include>
	<include name="line1">
		<width>900</width>
		<height>600</height>
		<font>lyrsh16</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line3">
		<width>900</width>
		<height>600</height>
		<font>lyrsh38</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line7">
		<width>900</width>
		<height>600</height>
		<font>lyrsh72</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="line9">
		<width>900</width>
		<height>600</height>
		<font>lyrsh94</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>

	<include name="defaultskinsettings">
		<!-- various default settings  -->
		<onload>Skin.SetBool(SkinHelper.EnablePVRThumbs)</onload>
		<onload>Skin.SetBool(SkinHelper.EnableMusicArt)</onload>
		<onload>Skin.SetString(SkinHelper.RandomFanartDelay,0)</onload>
	</include>
	<!-- Postion and size of fullscreen image -->
	<!-- NB, don't change height to a percentage as it will break fadebackground -->
	<include name="fullscreenimage">
		<left>0</left>
		<top>0</top>
		<width>100%</width>
		<height>1080</height>
	</include>
	<!-- Background shadow -->
	<!-- Don't fade background if on Fullscreen video screen -->
	<include name="fadebackground">
		<control type="image">
			<include>fullscreenimage</include>
			<texture>background-mask.png</texture>
			<colordiffuse>mask-background</colordiffuse>
			<aspectratio>stretch</aspectratio>
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
		</control>
	</include>
	<include name="background">
		<control type="group">
			<visible>!Window.IsVisible(fullscreenvideo)</visible>
			<!-- Don't try to show background if Video screen is showing -->
			<control type="fadelabel" id="300000"><!-- Randomizer for plugin-free multiple fanart -->
				<top>-1000</top> <!-- Don't need to see it, but can't change its visibility. Put it off screen -->
				<width>1</width>
				<height>1</height>
				<info>ListItem.Art(fanart1)</info>
				<info>ListItem.Art(fanart2)</info>
				<info>ListItem.Art(fanart3)</info>
				<info>ListItem.Art(fanart4)</info>
				<info>ListItem.Art(fanart5)</info>
				<info>ListItem.Art(fanart6)</info>
				<info>ListItem.Art(fanart7)</info>
				<info>ListItem.Art(fanart8)</info>
				<info>ListItem.Art(fanart9)</info>
				<!-- tvshow.fanart are filled with the series fanart when navigating season and episode lists -->
				<info>ListItem.Art(tvshow.fanart1)</info>
				<info>ListItem.Art(tvshow.fanart2)</info>
				<info>ListItem.Art(tvshow.fanart3)</info>
				<info>ListItem.Art(tvshow.fanart4)</info>
				<info>ListItem.Art(tvshow.fanart5)</info>
				<info>ListItem.Art(tvshow.fanart6)</info>
				<info>ListItem.Art(tvshow.fanart7)</info>
				<info>ListItem.Art(tvshow.fanart8)</info>
				<info>ListItem.Art(tvshow.fanart9)</info>
				<randomize>true</randomize>
				<pauseatend>6000</pauseatend> <!-- Time to show each image, in milliseconds -->
				<!-- No scrolling so only the pauseatend above (plus a short fade-in) affects length of time each image is shown -->
				<scroll>false</scroll>
				<scrollout>false</scrollout>
				<!-- Resets the timer when navigating to a new item, so each item's first visible fanart will
					show for the full amount of time -->
				<resetonlabelchange>true</resetonlabelchange>
			</control>
			<control type="image"><!-- Use Skin default background as a base layer for backdrops -->
				<include>fullscreenimage</include>
				<texture>background.png</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="multiimage">
				<include>fullscreenimage</include>
				<randomize>true</randomize>
				<timeperimage>6000</timeperimage>
				<fadetime>400</fadetime>
				<imagepath background="false">$VAR[BackgndImage]</imagepath>
				<aspectratio>stretch</aspectratio>
				<colordiffuse>$VAR[BackgndImageVisibity]</colordiffuse>
				<animation effect="fade" start="0" end="100" time="200" delay="1300">Visible</animation>
				<visible>!Container().Scrolling + !System.ScreenSaverActive + ![Skin.HasSetting(background-playingmedia) + Player.HasVideo]</visible>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(background-playingmedia) + [[Skin.HasSetting(homemenu-vertical) + Window.IsVisible(home)] | !Window.IsVisible(home)]</visible>
				<control type="videowindow">
					<include>fullscreenimage</include>
					<colordiffuse>$VAR[BackgndImageVisibity]</colordiffuse>
					<visible>Player.HasVideo</visible>
				</control>
				<control type="visualisation">
					<include>fullscreenimage</include>
					<colordiffuse>$VAR[BackgndImageVisibity]</colordiffuse>
					<animation effect="fade" time="200">VisibleChange</animation>
					<visible>Player.HasAudio + String.IsEmpty(Window(home).Property(PlayingOST))</visible>
				</control>
			</control>
		</control>
	</include>
	<include name="player-mediaicon">
		<control type="group" id="1">
			<!-- Player Media Icon -->
			<visible>[$EXP[isFullscreenVideo]] + ![Window.IsActive(musicosd)]</visible>
			<animation effect="fade" time="200">VisibleChange</animation>
			<control type="image" id="1">
				<!-- Movies or Tv Episodes -->
				<left>12</left>
				<top>746</top>
				<width>320</width>
				<height>320</height>
				<texture>$VAR[PlayerVideoArt]</texture>
				<align>center</align>
				<aligny>bottom</aligny>
				<aspectratio>keep</aspectratio>
				<visible>[VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)] + ![String.Contains(Player.FolderPath,pvr://) | String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)]</visible>
			</control>
			<control type="image" id="1">
				<!-- LiveTV playing -->
				<left>12</left>
				<top>746</top>
				<width>320</width>
				<height>320</height>
				<align>center</align>
				<aligny>bottom</aligny>
				<texture fallback="icon-livetv.png">$VAR[PVRPgmIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.Contains(Player.FolderPath,pvr://) + ![String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)]</visible>
			</control>
			<control type="image" id="1">
				<!-- Any video other than Movies and TV Episodes and LiveTV -->
				<left>12</left>
				<top>746</top>
				<width>320</width>
				<height>320</height>
				<align>center</align>
				<aligny>bottom</aligny>
				<texture diffuse="mask-rect.png" fallback="DefaultVideo.png" >$INFO[Player.Art(thumb)]</texture>
				<aspectratio scalediffuse="false">keep</aspectratio>
				<visible>[!VideoPlayer.Content(movies) + !VideoPlayer.Content(episodes) + !String.Contains(Player.FolderPath,pvr://)] | [String.StartsWith(Player.FileNameAndPath,http) | String.StartsWith(Player.FileNameAndPath,htsp) | String.StartsWith(Player.FileNameAndPath,mms) | String.StartsWith(Player.FileNameAndPath,rtmp)] </visible>
			</control>
		</control>
	</include>
	<include name="page-info">
		<control type="group">
			<visible>!System.ScreenSaverActive</visible>
			<animation effect="slide" end="282,0" condition="$EXP[isEnabledTouch]">Conditional</animation>
			<control type="image">
				<!-- RSS Logo -->
				<left>8</left>
				<top>1026</top>
				<width>32</width>
				<height>32</height>
				<aspectratio>keep</aspectratio>
				<texture>rss.png</texture>
			</control>
			<control type="rss">
				<left>40</left>
				<top>1018</top>
				<width>1880</width>
				<height>33</height>
				<font>apptv20</font>
				<urlset>1</urlset>
				<textcolor>info-text</textcolor>
				<titlecolor>rss-title-text</titlecolor>
				<headlinecolor>rss-headline-text</headlinecolor>
			</control>
		</control>
	</include>
	<include name="sortletternotification">
		<control type="group">
			<visible>Container.Scrolling + !Window.IsVisible(progressdialog) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(albums) | Container.Content(artists)]</visible>
			<animation effect="fade" time="200">Visible</animation>
			<animation effect="fade" time="200" delay="500">Hidden</animation>
			<animation condition="Skin.HasSetting(show-letterbar) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(albums) | Container.Content(artists)]" effect="fade" start="100" end="0" reversible="true">Conditional</animation>
			<left>897</left>
			<top>36</top>
			<width>123</width>
			<height>105</height>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>123</width>
				<height>105</height>
				<texture border="12">button-menu-background.png</texture>
				<visible>!String.IsEmpty(ListItem.SortLetter)</visible>
			</control>
			<control type="label">
				<left>0</left>
				<top>12</top>
				<width>123</width>
				<height>72</height>
				<align>center</align>
				<label>$INFO[ListItem.SortLetter]</label>
				<font>apptv48</font>
			</control>
		</control>
	</include>
	<include name="fake-overlay">
		<control type="group">
			<visible>Skin.HasSetting(media-overlay) + !Window.IsActive(playercontrols)</visible>
			<control type="group">
				<!-- Video Stuff -->
				<visible>Player.HasVideo + !Skin.HasSetting(background-playingmedia)</visible>
				<control type="videowindow">
					<left>30</left>
					<top>12</top>
					<width>240</width>
					<height>144</height>
				</control>
				<control type="label">
					<!-- Now playing -->
					<left>280</left>
					<top>3</top>
					<width>520</width>
					<height>38</height>
					<label>$LOCALIZE[31037]</label>
					<font>apptv22</font>
					<textcolor>listselected-text</textcolor>
				</control>
				<control type="group">
					<visible>!Pvr.IsPlayingTv</visible>
					<control type="label">
						<left>280</left>
						<top>45</top>
						<width>520</width>
						<height>30</height>
						<label>$INFO[VideoPlayer.Title]</label>
						<font>apptv20</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
						<visible>!VideoPlayer.Content(episodes)</visible>
					</control>
					<control type="label">
						<left>280</left>
						<top>45</top>
						<width>520</width>
						<height>30</height>
						<label>$INFO[VideoPlayer.TVShowTitle]</label>
						<font>apptv20</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
						<visible>VideoPlayer.Content(episodes)</visible>
					</control>
					<control type="label">
						<left>280</left>
						<top>80</top>
						<width>520</width>
						<height>30</height>
						<label>$INFO[VideoPlayer.Title]</label>
						<font>apptv20</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
						<visible>VideoPlayer.Content(episodes)</visible>
					</control>
				</control>
				<control type="label">
					<left>280</left>
					<top>45</top>
					<width>520</width>
					<height>30</height>
					<label>$INFO[VideoPlayer.ChannelName]</label>
					<font>apptv20</font>
					<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					<visible>Pvr.IsPlayingTv</visible>
				</control>
				<control type="label">
					<left>280</left>
					<top>80</top>
					<width>520</width>
					<height>30</height>
					<label>$INFO[VideoPlayer.Title]</label>
					<font>apptv20</font>
					<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					<visible>Pvr.IsPlayingTv</visible>
				</control>
				<control type="label">
					<!-- Time and duration -->
					<left>280</left>
					<top>114</top>
					<width>520</width>
					<height>30</height>
					<label>$INFO[Player.Time]$INFO[Player.Duration, / ]</label>
					<font>apptv20</font>
					<visible>!String.IsEmpty(Player.Time) + !String.IsEmpty(Player.Duration)</visible>
				</control>
			</control>
			<control type="group">
				<!-- Audio Stuff -->
				<visible>Player.HasAudio + String.IsEmpty(Window(home).Property(PlayingOST))</visible>
				<animation effect="fade" delay="2600" time="400">Visible</animation>
				<control type="group">
					<!-- Local Audio or a stream -->
					<visible>!Pvr.IsPlayingRadio</visible>
					<control type="image">
						<left>36</left>
						<top>6</top>
						<width>144</width>
						<height>144</height>
						<texture background="true" fallback="DefaultAudio.png">$VAR[PlayerMusicCover]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="label">
						<left>218</left>
						<top>3</top>
						<width>600</width>
						<height>38</height>
						<label>$VAR[PlayerMusicInfo1]</label>
						<font>apptv22</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
					<control type="label">
						<left>218</left>
						<top>45</top>
						<width>600</width>
						<height>30</height>
						<label>$VAR[PlayerMusicInfo2]</label>
						<font>apptv20</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
					<control type="label">
						<left>218</left>
						<top>80</top>
						<width>600</width>
						<height>30</height>
						<label>$VAR[PlayerMusicInfo3]</label>
						<font>apptv20</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
					<control type="label">
						<left>218</left>
						<top>114</top>
						<width>600</width>
						<height>38</height>
						<label>$INFO[MusicPlayer.Time]$INFO[MusicPlayer.Duration, / ]</label>
						<font>apptv20</font>
						<visible>!Player.IsInternetStream</visible>
					</control>
				</control>
				<control type="group">
					<!-- Radio -->
					<visible>Pvr.IsPlayingRadio</visible>
					<control type="image">
						<left>36</left>
						<top>6</top>
						<width>144</width>
						<height>144</height>
						<texture background="true" fallback="icon-radio.png">$VAR[PVRIcon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="label">
						<!-- Now playing -->
						<left>218</left>
						<top>3</top>
						<width>600</width>
						<height>38</height>
						<label>$LOCALIZE[31037]</label>
						<font>apptv22</font>
						<textcolor>listselected-text</textcolor>
					</control>
					<control type="label">
						<!-- Radio channel name -->
						<left>218</left>
						<top>45</top>
						<width>600</width>
						<height>30</height>
						<label>$LOCALIZE[19021] - $INFO[MusicPlayer.ChannelName]</label>
						<font>apptv20</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
					<control type="label">
						<!-- Radio Program name -->
						<left>218</left>
						<top>80</top>
						<width>600</width>
						<height>30</height>
						<label>$INFO[MusicPlayer.Title]</label>
						<font>apptv20</font>
						<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
					</control>
				</control>
			</control>
		</control>
	</include>
	<include name="horzhomelistitem">
		<control type="label">
			<left>12</left>
			<top>12</top>
			<width>291</width>
			<height>33</height>
			<font>apptv22</font>
			<align>center</align>
			<label fallback="20333">$INFO[ListItem.Label]</label>
			<include condition="Skin.HasSetting(text-autoscroll)">scrolltext</include>
			<animation effect="fade" start="100" end="35" condition="!ListItem.Property(isActive) | Control.HasFocus(402)">Conditional</animation>
		</control>
	</include>
	<!-- Dummy button for mouse control -->
	<include name="fullscreendummy">
		<control type="button" id="3550">
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<texturefocus>blank.png</texturefocus>
			<texturenofocus>blank.png</texturenofocus>
			<visible>$EXP[isEnabledTouch]</visible>
		</control>
	</include>
	<!-- Fake Equaliser (listitem is being played) -->
	<include name="fake-equaliser">
		<param name="feleft"/>
		<param name="fetop"/>
		<param name="fesize" default="64"/>
		<definition>
			<control type="image">
				<left>$PARAM[feleft]</left>
				<top>$PARAM[fetop]</top>
				<width>$PARAM[fesize]</width>
				<height>$PARAM[fesize]</height>
				<texture>equaliser.gif</texture>
				<visible>ListItem.IsPlaying</visible>
			</control>
		</definition>
	</include>
	<include name="osd-button">
		<param name="osdid"/>
		<param name="osdsize" default="64"/>
		<param name="osdtexture"/>
		<param name="osdaction"/>
		<param name="osdaction2" default="noop"/>
		<param name="osdup" default="noop"/>
		<param name="osdvisible" default="true"/>
		<definition>
			<control type="button" id="$PARAM[osdid]">
				<width>$PARAM[osdsize]</width>
				<height>$PARAM[osdsize]</height>
				<texturefocus>$PARAM[osdtexture]-focus.png</texturefocus>
				<texturenofocus>$PARAM[osdtexture].png</texturenofocus>
				<onclick>$PARAM[osdaction]</onclick>
				<onclick>$PARAM[osdaction2]</onclick>
				<onup>$PARAM[osdup]</onup>
				<include>focus-zoom</include>
				<visible>$PARAM[osdvisible]</visible>
			</control>
		</definition>
	</include>
	<include name="illegal-action">
		<param name="controlid"/>
		<param name="returnid"/>
		<definition>
			<control type="button" id="$PARAM[controlid]">
				<left>-10</left>
				<top>-10</top>
				<width>1</width>
				<height>1</height>
				<onfocus>SetFocus($PARAM[returnid])</onfocus>
				<onfocus>SetFocus($PARAM[returnid])</onfocus>
				<onfocus>ActivateWindow(1157)</onfocus>
			</control>
		</definition>
	</include>
	<include name="use-alttexture">
		<param name="visiblecondition"/>
		<definition>
			<usealttexture>$PARAM[visiblecondition]</usealttexture>
		</definition>
	</include>
	<include name="listitem-count">
		<param name="left" default="0"/>
		<param name="top" default="0"/>
		<param name="count"/>
		<param name="size" default="100"/>
		<definition>
			<control type="group">
				<visible>Integer.IsGreater($PARAM[count],0)</visible>
				<animation condition="true" effect="zoom" start="100" end="$PARAM[size]" center="auto">Conditional</animation>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<control type="image">
					<description> Count (less than 10) </description>
					<left>22</left>
					<top>0</top>
					<width>40</width>
					<height>40</height>
					<texture>overlaynumberitems.png</texture>
					<visible>!Integer.IsGreater($PARAM[count],9)</visible>
				</control>
				<control type="image">
					<description> Count (10 - 99) </description>
					<left>10</left>
					<top>0</top>
					<width>64</width>
					<height>40</height>
					<texture border="17,0,17,0">overlaynumberitems.png</texture>
					<visible>Integer.IsGreater($PARAM[count],9) + !Integer.IsGreater($PARAM[count],99)</visible>
				</control>
				<control type="image">
					<description> Count (100 - 999) </description>
					<left>0</left>
					<top>0</top>
					<width>84</width>
					<height>40</height>
					<texture border="17,0,17,0">overlaynumberitems.png</texture>
					<visible>Integer.IsGreater($PARAM[count],99) + !Integer.IsGreater($PARAM[count],999)</visible>
				</control>
				<control type="label">
					<shadowcolor/>
					<left>14</left>
					<top>5</top>
					<width>54</width>
					<height>30</height>
					<font>apptv20</font>
					<label>$INFO[$PARAM[count]]</label>
					<textcolor>white</textcolor>
					<align>center</align>
				</control>
			</control>
		</definition>
	</include>
	<include name="listitem-weather">
		<param name="left" default="0"/>
		<param name="top" default="0"/>
		<param name="size" default="100"/>
		<param name="currently"/>
		<param name="visible"/>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<animation condition="true" effect="zoom" start="100" end="$PARAM[size]" center="auto">Conditional</animation>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<control type="image">
					<left>60</left>
					<top>30</top>
					<width>140</width>
					<height>140</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">http://localhost:52307/getvarimage&amp;title=$INFO{Window(weather).Property(Day0.OutlookIcon)}</texture>
				</control>
				<control type="label">
					<left>200</left>
					<top>70</top>
					<width>130</width>
					<height>57</height>
					<font>apptv38</font>
					<textcolor>white</textcolor>
					<label>$INFO[$PARAM[currently]]</label>
					<align>center</align>
				</control>
			</control>
		</definition>
	</include>
	<include name="listpanelitems">
		<param name="itemcustombase"/>
		<param name="itemthumb"/>
		<param name="itemlabel"/>
		<param name="itemmenuheading"/>
		<param name="itemmenuid"/>
		<param name="itemcondition"/>
		<param name="itemtoggle"/>
		<definition>
			<item>
				<thumb>$PARAM[itemthumb]</thumb>
				<label>$PARAM[itemlabel]</label>
				<property name="isActive">true</property>
				<property name="visibleToggle">$PARAM[itemtoggle]</property>
				<property name="customBase">$PARAM[itemcustombase]</property>
				<property name="menuHeading">$PARAM[itemmenuheading]</property>
				<property name="menuID">$PARAM[itemmenuid]</property>
				<onclick>SetProperty(ListActive,true,settings)</onclick>
				<onclick>SetProperty(ListLabel,$PARAM[itemlabel],settings)</onclick>
				<onclick>SetProperty(ListID,$PARAM[itemmenuid],settings)</onclick>
				<onclick>SetProperty(ListToggle,$PARAM[itemtoggle],settings)</onclick>
				<onclick>SetProperty(ListCustomBase,$PARAM[itemcustombase],settings)</onclick>
				<onclick>SetProperty(CurrentType,$INFO[Skin.String($PARAM[itemcustombase].Type)],settings)</onclick>
				<onclick>SetProperty(CurrentAction,$PARAM[itemcustombase].Path,settings)</onclick>
				<onclick>SetProperty(CurrentLabel,$PARAM[itemcustombase].Label,settings)</onclick>
				<onclick>SetProperty(CurrentIcon,$PARAM[itemcustombase].Icon,settings)</onclick>
				<onclick>ActivateWindow(1153)</onclick>
				<visible>$PARAM[itemcondition]</visible>
			</item>
			<item>
				<thumb>$PARAM[itemthumb]</thumb>
				<label>$PARAM[itemlabel]</label>
				<property name="isActive"/>
				<property name="visibleToggle">$PARAM[itemtoggle]</property>
				<property name="customBase">$PARAM[itemcustombase]</property>
				<property name="menuHeading">$PARAM[itemmenuheading]</property>
				<property name="menuID">$PARAM[itemmenuid]</property>
				<onclick>ClearProperty(ListActive,settings)</onclick>
				<onclick>SetProperty(ListLabel,$PARAM[itemlabel],settings)</onclick>
				<onclick>SetProperty(ListID,$PARAM[itemmenuid],settings)</onclick>
				<onclick>SetProperty(ListToggle,$PARAM[itemtoggle],settings)</onclick>
				<onclick>SetProperty(ListCustomBase,$PARAM[itemcustombase],settings)</onclick>
				<onclick>SetProperty(CurrentType,$INFO[Skin.String($PARAM[itemcustombase].Type)],settings)</onclick>
				<onclick>SetProperty(CurrentAction,$PARAM[itemcustombase].Path,settings)</onclick>
				<onclick>SetProperty(CurrentLabel,$PARAM[itemcustombase].Label,settings)</onclick>
				<onclick>SetProperty(CurrentIcon,$PARAM[itemcustombase].Icon,settings)</onclick>
				<onclick>ActivateWindow(1153)</onclick>
				<visible>!$PARAM[itemcondition]</visible>
			</item>
		</definition>
	</include>
	<include name="page-indicator">
		<param name="indicatorleft" default="0"/>
		<param name="indicatortop" default="0"/>
		<param name="indicatorwidth" default="0"/>
		<param name="indicatorheight" default="0"/>
		<param name="indicatororientation" default="horizontal"/>
		<param name="grp1indicate"/>
		<param name="grp1visible" default="false"/>
		<param name="grp2indicate"/>
		<param name="grp2visible" default="false"/>
		<param name="grp3indicate"/>
		<param name="grp3visible" default="false"/>
		<param name="grp4indicate"/>
		<param name="grp4visible" default="false"/>
		<param name="grp5indicate"/>
		<param name="grp5visible" default="false"/>
		<definition>
			<control type="grouplist">
				<left>$PARAM[indicatorleft]</left>
				<top>$PARAM[indicatortop]</top>
				<width>$PARAM[indicatorwidth]</width>
				<height>$PARAM[indicatorheight]</height>
				<orientation>$PARAM[indicatororientation]</orientation>
				<itemgap>-12</itemgap>
				<aligny>center</aligny>
				<align>center</align>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp1indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp1visible]</visible>
				</control>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp2indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp2visible]</visible>
				</control>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp3indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp3visible]</visible>
				</control>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp4indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp4visible]</visible>
				</control>
				<control type="togglebutton">
					<width>48</width>
					<height>48</height>
					<texturefocus>groupunfocused.png</texturefocus>
					<texturenofocus>groupunfocused.png</texturenofocus>
					<alttexturefocus>groupfocused.png</alttexturefocus>
					<alttexturenofocus>groupfocused.png</alttexturenofocus>
					<usealttexture>$PARAM[grp5indicate]</usealttexture>
					<onclick/>
					<visible>$PARAM[grp5visible]</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="page-offscreen-vertical">
		<param name="indicator1left" default="0"/>
		<param name="indicator1top" default="0"/>
		<param name="indicator2left" default="0"/>
		<param name="indicator2top" default="0"/>
		<param name="indicatorsize" default="0"/>
		<param name="indicatorcontainer"/>
		<definition>
			<control type="group">
				<visible>Integer.IsGreater(Container($PARAM[indicatorcontainer]).NumItems,0) + Control.IsVisible($PARAM[indicatorcontainer])</visible>
				<control type="image">
					<left>$PARAM[indicator1left]</left>
					<top>$PARAM[indicator1top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-up.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasPrevious</visible>
				</control>
				<control type="image">
					<left>$PARAM[indicator2left]</left>
					<top>$PARAM[indicator2top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-down.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasNext</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="page-offscreen-horizontal">
		<param name="indicator1left" default="0"/>
		<param name="indicator1top" default="0"/>
		<param name="indicator2left" default="0"/>
		<param name="indicator2top" default="0"/>
		<param name="indicatorsize" default="0"/>
		<param name="indicatorcontainer"/>
		<definition>
			<control type="group">
				<visible>Integer.IsGreater(Container($PARAM[indicatorcontainer]).NumItems,0) + Control.IsVisible($PARAM[indicatorcontainer])</visible>
				<control type="image">
					<left>$PARAM[indicator1left]</left>
					<top>$PARAM[indicator1top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-left.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasPrevious</visible>
				</control>
				<control type="image">
					<left>$PARAM[indicator2left]</left>
					<top>$PARAM[indicator2top]</top>
					<height>$PARAM[indicatorsize]</height>
					<width>$PARAM[indicatorsize]</width>
					<texture>scroll-right.png</texture>
					<visible>Container($PARAM[indicatorcontainer]).HasNext</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="unsupported-widget">
		<param name="controlid"/>
		<definition>
			<control type="list" id="$PARAM[controlid]">
				<visible>false</visible>
				<left>-10</left>
				<top>-10</top>
				<width>0</width>
				<height>0</height>
				<viewtype label="31028">list</viewtype>
				<itemlayout/>
				<focusedlayout/>
			</control>
		</definition>
	</include>
	<include name="letterbar-vertical">
		<param name="searchleft"/>
		<param name="searchtop"/>
		<param name="letterbarleft"/>
		<param name="letterbartop"/>
		<param name="searchid"/>
		<param name="letterbarid"/>
		<param name="scrollbarid"/>
		<param name="listitemid"/>
		<param name="illegalexitsearch" default="noop"/>
		<param name="illegalexitbar" default="noop"/>
		<param name="letterbarvisible"/>
		<definition>
			<control type="group">
				<visible>$PARAM[letterbarvisible]</visible>
				<control type="button" id="$PARAM[searchid]">
					<left>$PARAM[searchleft]</left>
					<top>$PARAM[searchtop]</top>
					<width>30</width>
					<height>30</height>
					<onleft>$PARAM[listitemid]</onleft>
					<onright>$PARAM[scrollbarid]</onright>
					<onup>$PARAM[illegalexitsearch]</onup>
					<ondown>$PARAM[letterbarid]</ondown>
					<texturefocus>touch-search.png</texturefocus>
					<texturenofocus>touch-search.png</texturenofocus>
					<onclick condition="!System.HasAddon(script.globalsearch)">InstallAddon(script.globalsearch)</onclick>
					<onclick condition="System.HasAddon(script.globalsearch)">RunScript(script.globalsearch)</onclick>
					<animation effect="zoom" start="100" end="155" center="auto">focus</animation>
					<animation effect="fade" start="100" end="40" condition="!Control.HasFocus($PARAM[searchid])">Conditional</animation>
				</control>
				<control type="panel" id="$PARAM[letterbarid]">
					<left>$PARAM[letterbarleft]</left>
					<top>$PARAM[letterbartop]</top>
					<width>30</width>
					<height>891</height>
					<onleft>$PARAM[listitemid]</onleft>
					<onright condition="!String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">$PARAM[scrollbarid]</onright>
					<onright condition="String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">$PARAM[illegalexitbar]</onright>
					<onup>$PARAM[searchid]</onup>
					<ondown>$PARAM[illegalexitbar]</ondown>
					<orientation>vertical</orientation>
					<itemlayout height="33" width="30">
						<control type="label">
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>apptv20</font>
							<align>center</align>
							<textcolor>disabled-text</textcolor>
							<animation effect="fade" start="100" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
						</control>
						<control type="label">
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>apptv20</font>
							<textcolor>listselected-text</textcolor>
							<align>center</align>
							<visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter) | String.IsEqual(ListItem.Property(IsNumber),Container.ListItem.SortLetter)</visible>
						</control>
					</itemlayout>
					<focusedlayout height="33" width="30">
						<control type="label">
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>apptv20</font>
							<align>center</align>
							<textcolor>button-text</textcolor>
							<animation effect="zoom" start="100" end="155" center="auto">focus</animation>
							<animation effect="fade" start="100" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
						</control>
						<control type="label">
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>apptv20</font>
							<align>center</align>
							<textcolor>listselected-text</textcolor>
							<animation effect="zoom" start="100" end="155" center="auto">focus</animation>
							<animation effect="fade" start="100" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
							<visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter) | String.IsEqual(ListItem.Property(IsNumber),Container.ListItem.SortLetter)</visible>
						</control>
					</focusedlayout>
					<content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
				</control>
			</control>
		</definition>
	</include>
	<include name="letterbar-horizontal">
		<param name="searchleft"/>
		<param name="searchtop"/>
		<param name="letterbarleft"/>
		<param name="letterbartop"/>
		<param name="searchid"/>
		<param name="letterbarid"/>
		<param name="scrollbarid"/>
		<param name="listitemid"/>
		<param name="illegalexitsearch" default="noop"/>
		<param name="illegalexitbar" default="noop"/>
		<param name="letterbarvisible"/>
		<definition>
			<control type="group">
				<visible>$PARAM[letterbarvisible]</visible>
				<control type="button" id="$PARAM[searchid]">
					<left>$PARAM[searchleft]</left>
					<top>$PARAM[searchtop]</top>
					<width>30</width>
					<height>30</height>
					<onup>$PARAM[listitemid]</onup>
					<ondown>$PARAM[scrollbarid]</ondown>
					<onleft>$PARAM[illegalexitsearch]</onleft>
					<onright>$PARAM[letterbarid]</onright>
					<texturefocus>touch-search.png</texturefocus>
					<texturenofocus>touch-search.png</texturenofocus>
					<onclick condition="!System.HasAddon(script.globalsearch)">InstallAddon(script.globalsearch)</onclick>
					<onclick condition="System.HasAddon(script.globalsearch)">RunScript(script.globalsearch)</onclick>
					<animation effect="zoom" start="100" end="160" center="auto">focus</animation>
					<animation effect="fade" start="100" end="50" condition="!Control.HasFocus($PARAM[searchid])">Conditional</animation>
				</control>
				<control type="panel" id="$PARAM[letterbarid]">
					<left>$PARAM[letterbarleft]</left>
					<top>$PARAM[letterbartop]</top>
					<width>1848</width>
					<height>33</height>
					<onup>$PARAM[listitemid]</onup>
					<ondown condition="!String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">$PARAM[scrollbarid]</ondown>
					<ondown condition="String.IsEqual(Skin.String(show-scrollbar),$LOCALIZE[31877])">$PARAM[illegalexitbar]</ondown>
					<onleft>$PARAM[searchid]</onleft>
					<onright>$PARAM[illegalexitbar]</onright>
					<orientation>horizontal</orientation>
					<itemlayout height="33" width="66">
						<control type="label">
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>apptv20</font>
							<textcolor>disabled-text</textcolor>
							<align>center</align>
							<animation effect="fade" start="100" end="50" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
						</control>
						<control type="label">
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>apptv20</font>
							<textcolor>listselected-text</textcolor>
							<align>center</align>
							<visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter) | String.IsEqual(ListItem.Property(IsNumber),Container.ListItem.SortLetter)</visible>
						</control>
					</itemlayout>
					<focusedlayout height="33" width="66">
						<control type="label">
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>apptv20</font>
							<align>center</align>
							<animation effect="zoom" end="160" center="auto">focus</animation>
							<animation effect="fade" start="100" end="50" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
						</control>
						<control type="label">
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>apptv20</font>
							<align>center</align>
							<textcolor>listselected-text</textcolor>
							<animation effect="zoom" end="160" center="auto">focus</animation>
							<animation effect="fade" start="100" end="50" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
							<visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter) | String.IsEqual(ListItem.Property(IsNumber),Container.ListItem.SortLetter)</visible>
						</control>
					</focusedlayout>
					<content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
				</control>
			</control>
		</definition>
	</include>
	<include name="touch-controls">
		<control type="grouplist" id="8000">
			<visible>$EXP[isEnabledTouch]</visible>
			<left>30</left>
			<top>1026</top>
			<width>564</width>
			<height>48</height>
			<itemgap>18</itemgap>
			<orientation>horizontal</orientation>
			<control type="button">
				<!-- Back -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-back.png</texturefocus>
				<texturenofocus>touch-back.png</texturenofocus>
				<onclick>Back</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsVisible(home)</visible>
			</control>
			<control type="togglebutton">
				<!-- OSD Play/Pause -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-play.png</texturefocus>
				<texturenofocus>touch-play.png</texturenofocus>
				<alttexturefocus>touch-pause.png</alttexturefocus>
				<alttexturenofocus>touch-pause.png</alttexturenofocus>
				<usealttexture>Player.Paused</usealttexture>
				<onclick>ActivateWindow(playercontrols)</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasAudio | Player.HasVideo</visible>
			</control>
			<control type="button">
				<!-- Zoom -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-zoom.png</texturefocus>
				<texturenofocus>touch-zoom.png</texturenofocus>
				<onclick>FullScreen</onclick>
				<include>focus-zoom</include>
				<visible>Player.HasAudio | Player.HasVideo</visible>
			</control>
			<control type="button">
				<!-- Search -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-search.png</texturefocus>
				<texturenofocus>touch-search.png</texturenofocus>
				<onclick condition="!System.HasAddon(script.globalsearch)">InstallAddon(script.globalsearch)</onclick>
				<onclick condition="System.HasAddon(script.globalsearch)">RunScript(script.globalsearch)</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsVisible(script-globalsearch.xml)</visible>
			</control>
			<control type="button">
				<!-- Favourite -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-fav.png</texturefocus>
				<texturenofocus>touch-fav.png</texturenofocus>
				<onclick>ActivateWindow(favourites)</onclick>
				<include>focus-zoom</include>
				<visible>!Window.IsVisible(home)</visible>
			</control>
			<control type="button">
				<!-- Screen Settings -->
				<width>48</width>
				<height>48</height>
				<texturefocus>touch-settings.png</texturefocus>
				<texturenofocus>touch-settings.png</texturenofocus>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetFocus(9000)</onclick>
				<onclick condition="!String.IsEqual(Window(home).Property(ShowScreenSettings),show)">SetProperty(ShowScreenSettings,show,home)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(ShowScreenSettings),show)">ClearProperty(ShowScreenSettings,home)</onclick>
				<include>focus-zoom</include>
				<visible>!Skin.HasSetting(lock-screensettings)</visible>
			</control>
		</control>
	</include>
	<include name="PVRChannelNumberInput">
		<control type="label">
			<left>0</left>
			<top>0</top>
			<width>95%</width>
			<height>100%</height>
			<label>$INFO[PVR.ChannelNumberInput]</label>
			<align>right</align>
			<font>Clock</font>
			<aligny>top</aligny>
			<visible>!String.IsEmpty(PVR.ChannelNumberInput)</visible>
		</control>
	</include>
	<include name="settings-submenu-common">
		<width>1328</width>
		<height>84</height>
		<font>apptv22</font>
	</include>
	<include name="info-options-common">
		<height>144</height>
		<width>144</width>
		<font>apptv16</font>
		<textcolor>disabled-text</textcolor>
		<focusedcolor>button-text</focusedcolor>
		<align>center</align>
		<aligny>top</aligny>
		<wrapmultiline>true</wrapmultiline>
		<textwidth>136</textwidth>
		<textoffsety>84</textoffsety>
	</include>
	<include name="keyboard-key-common">
		<shadowcolor/>
		<width>96</width>
		<height>96</height>
		<texturenofocus border="9">key-standard-nofocus.png</texturenofocus>
		<texturefocus border="9">key-standard-focus.png</texturefocus>
		<textcolor>keyboard-focus-text</textcolor>
		<focusedcolor>keyboard-focus-text</focusedcolor>
		<font>apptv25</font>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="keyboard-auto-complete">
		<content>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=10</content>
	</include>
	<include name="overlay-label">
		<width>1170</width>
		<height>34</height>
		<font>apptv23</font>
	</include>
	<include name="scrolltext">
		<scroll>true</scroll>
		<visible>![System.ScreenSaverActive]</visible>
	</include>
	<include name="focus-zoom">
		<animation effect="zoom" start="100" end="116" center="auto" time="200" tween="back" easing="out" reversible="false">focus</animation>
	</include>
	<include name="settingbutton-fade">
		<animation effect="fade" start="100" end="60">Visible</animation>
	</include>
	<include name="busy-spin">
		<animation effect="rotate" start="360" end="0" center="auto" time="5400" loop="true" condition="true">conditional</animation>
	</include>
	<include name="screen-settings">
		<animation effect="slide" start="0,0" end="0,-1080">Visible</animation>
		<visible allowhiddenfocus="true">[ControlGroup(9000).HasFocus() | String.IsEqual(Window(home).Property(ShowScreenSettings),show)] + !Skin.HasSetting(lock-screensettings)</visible>
	</include>
	<include name="window-openclose">
		<animation effect="fade" time="100">WindowOpen</animation>
		<animation effect="fade" time="100">WindowClose</animation>
	</include>
	<include name="zoom-openclose">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" time="200"/>
			<effect type="zoom" start="110" end="100" time="200" center="auto"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" time="200"/>
			<effect type="zoom" end="110" time="200" center="auto"/>
		</animation>
	</include>
</includes>